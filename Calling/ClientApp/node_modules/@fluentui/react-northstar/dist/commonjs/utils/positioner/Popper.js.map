{"version":3,"sources":["utils/positioner/Popper.tsx"],"names":["useDeepMemo","memoFn","key","ref","React","useRef","current","value","useFirstMount","isFirst","useUpdateIsomorphicLayoutEffect","effect","deps","isFirstMount","Popper","props","align","children","enabled","flipBoundary","userModifiers","modifiers","offset","overflowBoundary","pointerTargetRef","popperRef","position","positionFixed","positioningDependencies","rtl","targetRef","unstable_pinned","proposedPlacement","popperInstanceRef","contentRef","latestPlacement","useState","computedPlacement","setComputedPlacement","computedModifiers","name","options","createInstance","useCallback","reference","handleUpdate","state","placement","hasDocument","scrollParentElement","hasScrollableElement","ownerDocument","body","hasPointer","flipVariations","boundary","strategy","element","altBoundary","phase","fn","filter","Boolean","onFirstUpdate","PopperJs","createPopper","destroyInstance","destroy","scheduleUpdate","update","useImperativeHandle","updatePosition","child","Children","only","defaultProps"],"mappings":"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","sourcesContent":["import { useIsomorphicLayoutEffect } from '@fluentui/react-bindings';\nimport { Ref, isRefObject } from '@fluentui/react-component-ref';\nimport * as PopperJs from '@popperjs/core';\nimport * as _ from 'lodash';\nimport * as React from 'react';\n\nimport { isBrowser } from '../isBrowser';\nimport { getBoundary } from './getBoundary';\nimport { getScrollParent } from './getScrollParent';\nimport { getPlacement, applyRtlToOffset } from './positioningHelper';\nimport { PopperModifiers, PopperProps } from './types';\n\n/**\n * Memoize a result using deep equality. This hook has two advantages over\n * React.useMemo: it uses deep equality to compare memo keys, and it guarantees\n * that the memo function will only be called if the keys are unequal.\n * React.useMemo cannot be relied on to do this, since it is only a performance\n * optimization (see https://reactjs.org/docs/hooks-reference.html#usememo).\n *\n * Copied from https://github.com/apollographql/react-apollo/blob/master/packages/hooks/src/utils/useDeepMemo.ts.\n */\nfunction useDeepMemo<TKey, TValue>(memoFn: () => TValue, key: TKey): TValue {\n  const ref = React.useRef<{ key: TKey; value: TValue }>();\n\n  if (!ref.current || !_.isEqual(key, ref.current.key)) {\n    ref.current = { key, value: memoFn() };\n  }\n\n  return ref.current.value;\n}\n\n/** Checks if components was mounted the first time. */\nfunction useFirstMount(): boolean {\n  const isFirst = React.useRef(true);\n\n  if (isFirst.current) {\n    isFirst.current = false;\n    return true;\n  }\n\n  return isFirst.current;\n}\n\n/** Executes useIsomorphicLayoutEffect during only updates. */\nconst useUpdateIsomorphicLayoutEffect: typeof React.useLayoutEffect = (effect, deps) => {\n  const isFirstMount = useFirstMount();\n\n  useIsomorphicLayoutEffect(() => {\n    if (!isFirstMount) {\n      return effect();\n    }\n  }, deps);\n};\n\n/**\n * Popper relies on the 3rd party library [Popper.js](https://github.com/FezVrasta/popper.js) for positioning.\n */\nexport const Popper: React.FunctionComponent<PopperProps> = props => {\n  const {\n    align,\n    children,\n    enabled,\n    flipBoundary,\n    modifiers: userModifiers,\n    offset,\n    overflowBoundary,\n    pointerTargetRef,\n    popperRef,\n    position,\n    positionFixed,\n    positioningDependencies = [],\n    rtl,\n    targetRef,\n    unstable_pinned,\n  } = props;\n\n  const proposedPlacement = getPlacement({ align, position, rtl });\n\n  const popperInstanceRef = React.useRef<PopperJs.Instance>();\n  const contentRef = React.useRef<HTMLElement>(null);\n\n  const latestPlacement = React.useRef<PopperJs.Placement>(proposedPlacement);\n  const [computedPlacement, setComputedPlacement] = React.useState<PopperJs.Placement>(proposedPlacement);\n\n  const computedModifiers = useDeepMemo<any, PopperModifiers>(\n    () => [\n      offset && {\n        name: 'offset',\n        options: { offset: rtl ? applyRtlToOffset(offset) : offset },\n      },\n      ...userModifiers,\n    ],\n    [offset, flipBoundary, overflowBoundary, userModifiers],\n  );\n\n  const createInstance = React.useCallback(() => {\n    const reference: Element | PopperJs.VirtualElement =\n      targetRef && isRefObject(targetRef)\n        ? (targetRef as React.RefObject<Element>).current\n        : (targetRef as PopperJs.VirtualElement);\n\n    if (!enabled || !reference || !contentRef.current) {\n      return;\n    }\n\n    const handleUpdate = ({ state }: { state: Partial<PopperJs.State> }) => {\n      // PopperJS performs computations that might update the computed placement: auto positioning, flipping the\n      // placement in case the popper box should be rendered at the edge of the viewport and does not fit\n      if (state.placement !== latestPlacement.current) {\n        latestPlacement.current = state.placement;\n        setComputedPlacement(state.placement);\n      }\n    };\n\n    const hasDocument = isBrowser();\n    const scrollParentElement: Node | null = hasDocument ? getScrollParent(contentRef.current) : null;\n\n    const hasScrollableElement = scrollParentElement\n      ? scrollParentElement !== scrollParentElement.ownerDocument.body\n      : false;\n    const hasPointer = !!(pointerTargetRef && pointerTargetRef.current);\n\n    const modifiers: PopperModifiers = [\n      { name: 'flip', options: { flipVariations: true } },\n\n      /**\n       * unstable_pinned disables the flip modifier by setting flip.enabled to false; this\n       * disables automatic repositioning of the popper box; it will always be placed according to\n       * the values of `align` and `position` props, regardless of the size of the component, the\n       * reference element or the viewport.\n       */\n      unstable_pinned && { name: 'flip', enabled: false },\n\n      /**\n       * When the popper box is placed in the context of a scrollable element, we need to set\n       * preventOverflow.escapeWithReference to true and flip.boundariesElement to 'scrollParent'\n       * (default is 'viewport') so that the popper box will stick with the targetRef when we\n       * scroll targetRef out of the viewport.\n       */\n      hasScrollableElement && { name: 'flip', options: { boundary: 'clippingParents' } },\n      hasScrollableElement && { name: 'preventOverflow', options: { boundary: 'clippingParents' } },\n    ];\n\n    const options: PopperJs.Options = {\n      placement: proposedPlacement,\n      strategy: positionFixed ? 'fixed' : 'absolute',\n      modifiers: [\n        ...(modifiers as PopperJs.Options['modifiers']),\n\n        ...computedModifiers,\n\n        /**\n         * This modifier is necessary in order to render the pointer. Refs are resolved in effects, so it can't be\n         * placed under computed modifiers. Deep merge is not required as this modifier has only these properties.\n         */\n        {\n          name: 'arrow',\n          enabled: hasPointer,\n          options: {\n            element: pointerTargetRef && pointerTargetRef.current,\n          },\n        },\n\n        flipBoundary && {\n          name: 'flip',\n          options: {\n            altBoundary: true,\n            boundary: getBoundary(contentRef.current, flipBoundary),\n          },\n        },\n        overflowBoundary && {\n          name: 'preventOverflow',\n          options: {\n            altBoundary: true,\n            boundary: getBoundary(contentRef.current, overflowBoundary),\n          },\n        },\n\n        {\n          name: 'onUpdate',\n          enabled: true,\n          phase: 'afterWrite' as PopperJs.ModifierPhases,\n          fn: handleUpdate,\n        },\n      ].filter(Boolean),\n      onFirstUpdate: state => handleUpdate({ state }),\n    };\n\n    popperInstanceRef.current = PopperJs.createPopper(reference, contentRef.current, options);\n  }, [\n    contentRef,\n    computedModifiers,\n    enabled,\n    flipBoundary,\n    overflowBoundary,\n    pointerTargetRef,\n    positionFixed,\n    proposedPlacement,\n    targetRef,\n    unstable_pinned,\n  ]);\n\n  const destroyInstance = React.useCallback(() => {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.destroy();\n      popperInstanceRef.current = null;\n    }\n  }, []);\n\n  const scheduleUpdate = React.useCallback(() => {\n    if (popperInstanceRef.current) {\n      popperInstanceRef.current.update();\n    }\n  }, []);\n\n  React.useImperativeHandle(\n    popperRef,\n    () => ({\n      updatePosition: scheduleUpdate,\n    }),\n    [scheduleUpdate],\n  );\n\n  useIsomorphicLayoutEffect(() => {\n    createInstance();\n    return destroyInstance;\n  }, [createInstance]);\n\n  useUpdateIsomorphicLayoutEffect(scheduleUpdate, [...positioningDependencies, computedPlacement]);\n\n  const child =\n    typeof children === 'function'\n      ? children({ placement: computedPlacement, scheduleUpdate })\n      : (children as React.ReactElement);\n\n  return child ? <Ref innerRef={contentRef}>{React.Children.only(child)}</Ref> : null;\n};\n\nPopper.defaultProps = {\n  enabled: true,\n  modifiers: [],\n  positionFixed: false,\n  positioningDependencies: [],\n};\n"],"file":"Popper.js"}