{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";// © Microsoft Corporation. All rights reserved.\nimport React,{useEffect,useState}from'react';import{Stack,Spinner,PrimaryButton}from'@fluentui/react';import LocalPreview from'./LocalPreview';import LocalSettings from'./LocalSettings';import DisplayNameField from'./DisplayNameField';import{VideoCameraEmphasisIcon}from'@fluentui/react-icons-northstar';import{videoCameraIconStyle,configurationStackTokens,buttonStyle,localSettingsContainerStyle,mainContainerStyle,fullScreenStyle,verticalStackStyle}from'./styles/Configuration.styles';export default(function(props){var spinnerLabel='Initializing call client...';var buttonText='Start call';var _useState=useState(props.userId),_useState2=_slicedToArray(_useState,2),name=_useState2[0],setName=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),emptyWarning=_useState4[0],setEmptyWarning=_useState4[1];var userId=props.userId,groupId=props.groupId,setUserId=props.setUserId,initCallClient=props.initCallClient,setGroup=props.setGroup,unsupportedStateHandler=props.unsupportedStateHandler,endCallHandler=props.endCallHandler;useEffect(function(){setUserId(userId);initCallClient(userId,unsupportedStateHandler,endCallHandler);setGroup(groupId);},[userId,groupId,setUserId,initCallClient,setGroup,unsupportedStateHandler,endCallHandler]);return/*#__PURE__*/React.createElement(Stack,{className:mainContainerStyle,horizontalAlign:\"center\",verticalAlign:\"center\"},props.deviceManager?/*#__PURE__*/React.createElement(Stack,{className:props.screenWidth>750?fullScreenStyle:verticalStackStyle,horizontal:props.screenWidth>750,horizontalAlign:\"center\",verticalAlign:\"center\",tokens:props.screenWidth>750?configurationStackTokens:undefined},/*#__PURE__*/React.createElement(LocalPreview,{setMic:props.setMic,setLocalVideoStream:props.setLocalVideoStream,videoDeviceInfo:props.videoDeviceInfo,audioDeviceInfo:props.audioDeviceInfo,localVideoStream:props.localVideoStream}),/*#__PURE__*/React.createElement(Stack,{className:localSettingsContainerStyle},/*#__PURE__*/React.createElement(DisplayNameField,{setName:setName,name:name,setEmptyWarning:setEmptyWarning,isEmpty:emptyWarning}),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(LocalSettings,{videoDeviceList:props.videoDeviceList,audioDeviceList:props.audioDeviceList,audioDeviceInfo:props.audioDeviceInfo,videoDeviceInfo:props.videoDeviceInfo,setVideoDeviceInfo:props.setVideoDeviceInfo,setAudioDeviceInfo:props.setAudioDeviceInfo})),/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(PrimaryButton,{className:buttonStyle,onClick:function onClick(){if(!name){setEmptyWarning(true);}else{setEmptyWarning(false);props.setUserId(name);props.callAgent.updateDisplayName(name);props.startCallHandler();}}},/*#__PURE__*/React.createElement(VideoCameraEmphasisIcon,{className:videoCameraIconStyle,size:\"medium\"}),buttonText)))):/*#__PURE__*/React.createElement(Spinner,{label:spinnerLabel,ariaLive:\"assertive\",labelPosition:\"top\"}));});","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/components/Configuration.tsx"],"names":["React","useEffect","useState","Stack","Spinner","PrimaryButton","LocalPreview","LocalSettings","DisplayNameField","VideoCameraEmphasisIcon","videoCameraIconStyle","configurationStackTokens","buttonStyle","localSettingsContainerStyle","mainContainerStyle","fullScreenStyle","verticalStackStyle","props","spinnerLabel","buttonText","userId","name","setName","emptyWarning","setEmptyWarning","groupId","setUserId","initCallClient","setGroup","unsupportedStateHandler","endCallHandler","deviceManager","screenWidth","undefined","setMic","setLocalVideoStream","videoDeviceInfo","audioDeviceInfo","localVideoStream","videoDeviceList","audioDeviceList","setVideoDeviceInfo","setAudioDeviceInfo","callAgent","updateDisplayName","startCallHandler"],"mappings":"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","sourcesContent":["// © Microsoft Corporation. All rights reserved.\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Stack, Spinner, PrimaryButton } from '@fluentui/react';\r\nimport LocalPreview from './LocalPreview';\r\nimport LocalSettings from './LocalSettings';\r\nimport DisplayNameField from './DisplayNameField';\r\nimport {\r\n  VideoDeviceInfo,\r\n  AudioDeviceInfo,\r\n  LocalVideoStream,\r\n  DeviceManager,\r\n  CallAgent\r\n} from '@azure/communication-calling';\r\nimport { VideoCameraEmphasisIcon } from '@fluentui/react-icons-northstar';\r\nimport {\r\n  videoCameraIconStyle,\r\n  configurationStackTokens,\r\n  buttonStyle,\r\n  localSettingsContainerStyle,\r\n  mainContainerStyle,\r\n  fullScreenStyle,\r\n  verticalStackStyle\r\n} from './styles/Configuration.styles';\r\n\r\nexport interface ConfigurationScreenProps {\r\n  userId: string;\r\n  groupId: string;\r\n  callAgent: CallAgent;\r\n  deviceManager: DeviceManager;\r\n  setUserId(userId: string): void;\r\n  initCallClient(userId: string, unsupportedStateHandler: () => void, endCallhandler: () => void): void;\r\n  setGroup(groupId: string): void;\r\n  startCallHandler(): void;\r\n  unsupportedStateHandler: () => void;\r\n  endCallHandler: () => void;\r\n  videoDeviceList: VideoDeviceInfo[];\r\n  audioDeviceList: AudioDeviceInfo[];\r\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\r\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\r\n  setMic(mic: boolean): void;\r\n  setLocalVideoStream(stream: LocalVideoStream | undefined): void;\r\n  localVideoRendererIsBusy: boolean;\r\n  videoDeviceInfo: VideoDeviceInfo;\r\n  audioDeviceInfo: AudioDeviceInfo;\r\n  localVideoStream: LocalVideoStream;\r\n  screenWidth: number;\r\n}\r\n\r\nexport default (props: ConfigurationScreenProps): JSX.Element => {\r\n  const spinnerLabel = 'Initializing call client...';\r\n  const buttonText = 'Start call';\r\n\r\n  const [name, setName] = useState(props.userId);\r\n  const [emptyWarning, setEmptyWarning] = useState(false);\r\n\r\n  const { userId, groupId, setUserId, initCallClient, setGroup, unsupportedStateHandler, endCallHandler } = props;\r\n\r\n  useEffect(() => {\r\n    setUserId(userId);\r\n    initCallClient(userId, unsupportedStateHandler, endCallHandler);\r\n    setGroup(groupId);\r\n  }, [userId, groupId, setUserId, initCallClient, setGroup, unsupportedStateHandler, endCallHandler]);\r\n\r\n  return (\r\n    <Stack className={mainContainerStyle} horizontalAlign=\"center\" verticalAlign=\"center\">\r\n      {props.deviceManager ? (\r\n        <Stack\r\n          className={props.screenWidth > 750 ? fullScreenStyle : verticalStackStyle}\r\n          horizontal={props.screenWidth > 750}\r\n          horizontalAlign=\"center\"\r\n          verticalAlign=\"center\"\r\n          tokens={props.screenWidth > 750 ? configurationStackTokens : undefined}\r\n        >\r\n          <LocalPreview\r\n            setMic={props.setMic}\r\n            setLocalVideoStream={props.setLocalVideoStream}\r\n            videoDeviceInfo={props.videoDeviceInfo}\r\n            audioDeviceInfo={props.audioDeviceInfo}\r\n            localVideoStream={props.localVideoStream}\r\n          />\r\n          <Stack className={localSettingsContainerStyle}>\r\n            <DisplayNameField setName={setName} name={name} setEmptyWarning={setEmptyWarning} isEmpty={emptyWarning} />\r\n            <div>\r\n              <LocalSettings\r\n                videoDeviceList={props.videoDeviceList}\r\n                audioDeviceList={props.audioDeviceList}\r\n                audioDeviceInfo={props.audioDeviceInfo}\r\n                videoDeviceInfo={props.videoDeviceInfo}\r\n                setVideoDeviceInfo={props.setVideoDeviceInfo}\r\n                setAudioDeviceInfo={props.setAudioDeviceInfo}\r\n              />\r\n            </div>\r\n            <div>\r\n              <PrimaryButton\r\n                className={buttonStyle}\r\n                onClick={() => {\r\n                  if (!name) {\r\n                    setEmptyWarning(true);\r\n                  } else {\r\n                    setEmptyWarning(false);\r\n                    props.setUserId(name);\r\n                    props.callAgent.updateDisplayName(name);\r\n                    props.startCallHandler();\r\n                  }\r\n                }}\r\n              >\r\n                <VideoCameraEmphasisIcon className={videoCameraIconStyle} size=\"medium\" />\r\n                {buttonText}\r\n              </PrimaryButton>\r\n            </div>\r\n          </Stack>\r\n        </Stack>\r\n      ) : (\r\n        <Spinner label={spinnerLabel} ariaLive=\"assertive\" labelPosition=\"top\" />\r\n      )}\r\n    </Stack>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}