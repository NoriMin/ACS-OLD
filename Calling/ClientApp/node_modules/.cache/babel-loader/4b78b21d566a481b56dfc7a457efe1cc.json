{"ast":null,"code":"import _regeneratorRuntime from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";// © Microsoft Corporation. All rights reserved.\nimport React,{useEffect,useState}from'react';import{Label}from'@fluentui/react';import{Renderer}from'@azure/communication-calling';import{videoHint,mediaContainer}from'./styles/StreamMedia.styles';import{utils}from'Utils/Utils';import staticMediaSVG from\"../assets/staticmedia.svg\";import{Image,ImageFit}from'@fluentui/react';export default(function(props){var rendererView;var streamId=props.stream?utils.getStreamId(props.label,props.stream):\"\".concat(props.label,\" - no stream\");var _useState=useState(false),_useState2=_slicedToArray(_useState,2),available=_useState2[0],setAvailable=_useState2[1];var imageProps={src:staticMediaSVG.toString(),imageFit:ImageFit.contain,maximizeFrame:true};var stream=props.stream;var renderStream=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var container,renderer;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:container=document.getElementById(streamId);if(!(container&&props.stream&&props.stream.isAvailable)){_context.next=10;break;}setAvailable(true);renderer=new Renderer(props.stream);_context.next=6;return renderer.createView({scalingMode:'Crop'});case 6:rendererView=_context.sent;// we need to check if the stream is available still and if the id is what we expect\nif(container&&container.childElementCount===0){container.appendChild(rendererView.target);}_context.next=12;break;case 10:setAvailable(false);if(rendererView){rendererView.dispose();}case 12:case\"end\":return _context.stop();}}},_callee);}));return function renderStream(){return _ref.apply(this,arguments);};}();useEffect(function(){if(!stream){return;}stream.on('availabilityChanged',renderStream);if(stream.isAvailable){renderStream();}},[stream,renderStream]);return/*#__PURE__*/React.createElement(\"div\",{className:mediaContainer},/*#__PURE__*/React.createElement(\"div\",{style:{display:available?'block':'none'},className:mediaContainer,id:streamId}),/*#__PURE__*/React.createElement(Image,Object.assign({style:{display:available?'none':'block'}},imageProps)),/*#__PURE__*/React.createElement(Label,{className:videoHint},props.label));});","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/components/RemoteStreamMedia.tsx"],"names":["React","useEffect","useState","Label","Renderer","videoHint","mediaContainer","utils","Image","ImageFit","props","rendererView","streamId","stream","getStreamId","label","available","setAvailable","imageProps","src","staticMediaSVG","toString","imageFit","contain","maximizeFrame","renderStream","container","document","getElementById","isAvailable","renderer","createView","scalingMode","childElementCount","appendChild","target","dispose","on","display"],"mappings":"2rBAAA;AAEA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CACA,OAASC,KAAT,KAAsB,iBAAtB,CACA,OAA4BC,QAA5B,KAA0D,8BAA1D,CACA,OAASC,SAAT,CAAoBC,cAApB,KAA0C,6BAA1C,CACA,OAASC,KAAT,KAAsB,aAAtB,C,sDAEA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,iBAAhC,CAOA,eAAe,SAACC,KAAD,CAAgD,CAC7D,GAAIC,CAAAA,YAAJ,CAEA,GAAIC,CAAAA,QAAQ,CAAGF,KAAK,CAACG,MAAN,CAAeN,KAAK,CAACO,WAAN,CAAkBJ,KAAK,CAACK,KAAxB,CAA+BL,KAAK,CAACG,MAArC,CAAf,WAAiEH,KAAK,CAACK,KAAvE,gBAAf,CAH6D,cAK3Bb,QAAQ,CAAC,KAAD,CALmB,wCAKtDc,SALsD,eAK3CC,YAL2C,eAO7D,GAAMC,CAAAA,UAAU,CAAG,CACjBC,GAAG,CAAEC,cAAc,CAACC,QAAf,EADY,CAEjBC,QAAQ,CAAEb,QAAQ,CAACc,OAFF,CAGjBC,aAAa,CAAE,IAHE,CAAnB,CAMA,GAAMX,CAAAA,MAAM,CAAGH,KAAK,CAACG,MAArB,CAEA,GAAMY,CAAAA,YAAY,0FAAG,0JACfC,SADe,CACHC,QAAQ,CAACC,cAAT,CAAwBhB,QAAxB,CADG,MAGfc,SAAS,EAAIhB,KAAK,CAACG,MAAnB,EAA6BH,KAAK,CAACG,MAAN,CAAagB,WAH3B,2BAIjBZ,YAAY,CAAC,IAAD,CAAZ,CAEIa,QANa,CAMQ,GAAI1B,CAAAA,QAAJ,CAAaM,KAAK,CAACG,MAAnB,CANR,uBAOIiB,CAAAA,QAAQ,CAACC,UAAT,CAAoB,CAAEC,WAAW,CAAE,MAAf,CAApB,CAPJ,QAOjBrB,YAPiB,eASjB;AACA,GAAIe,SAAS,EAAIA,SAAS,CAACO,iBAAV,GAAgC,CAAjD,CAAoD,CAClDP,SAAS,CAACQ,WAAV,CAAsBvB,YAAY,CAACwB,MAAnC,EACD,CAZgB,+BAcjBlB,YAAY,CAAC,KAAD,CAAZ,CAEA,GAAIN,YAAJ,CAAkB,CAChBA,YAAY,CAACyB,OAAb,GACD,CAlBgB,uDAAH,kBAAZX,CAAAA,YAAY,0CAAlB,CAsBAxB,SAAS,CAAC,UAAM,CACd,GAAI,CAACY,MAAL,CAAa,CACX,OACD,CAEDA,MAAM,CAACwB,EAAP,CAAU,qBAAV,CAAiCZ,YAAjC,EAEA,GAAIZ,MAAM,CAACgB,WAAX,CAAwB,CACtBJ,YAAY,GACb,CACF,CAVQ,CAUN,CAACZ,MAAD,CAASY,YAAT,CAVM,CAAT,CAYA,mBACE,2BAAK,SAAS,CAAEnB,cAAhB,eACE,2BAAK,KAAK,CAAE,CAAEgC,OAAO,CAAEtB,SAAS,CAAG,OAAH,CAAa,MAAjC,CAAZ,CAAuD,SAAS,CAAEV,cAAlE,CAAkF,EAAE,CAAEM,QAAtF,EADF,cAEE,oBAAC,KAAD,gBAAO,KAAK,CAAE,CAAE0B,OAAO,CAAEtB,SAAS,CAAG,MAAH,CAAY,OAAhC,CAAd,EAA6DE,UAA7D,EAFF,cAGE,oBAAC,KAAD,EAAO,SAAS,CAAEb,SAAlB,EAA8BK,KAAK,CAACK,KAApC,CAHF,CADF,CAOD,CAxDD","sourcesContent":["// © Microsoft Corporation. All rights reserved.\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Label } from '@fluentui/react';\r\nimport { RemoteVideoStream, Renderer, RendererView } from '@azure/communication-calling';\r\nimport { videoHint, mediaContainer } from './styles/StreamMedia.styles';\r\nimport { utils } from 'Utils/Utils';\r\nimport staticMediaSVG from '../assets/staticmedia.svg';\r\nimport { Image, ImageFit } from '@fluentui/react';\r\n\r\nexport interface RemoteStreamMediaProps {\r\n  label: string;\r\n  stream: RemoteVideoStream | undefined;\r\n}\r\n\r\nexport default (props: RemoteStreamMediaProps): JSX.Element => {\r\n  let rendererView: RendererView;\r\n\r\n  let streamId = props.stream ? utils.getStreamId(props.label, props.stream) : `${props.label} - no stream`;\r\n\r\n  const [available, setAvailable] = useState(false);\r\n\r\n  const imageProps = {\r\n    src: staticMediaSVG.toString(),\r\n    imageFit: ImageFit.contain,\r\n    maximizeFrame: true\r\n  };\r\n\r\n  const stream = props.stream;\r\n\r\n  const renderStream = async () => {\r\n    var container = document.getElementById(streamId);\r\n\r\n    if (container && props.stream && props.stream.isAvailable) {\r\n      setAvailable(true);\r\n\r\n      var renderer: Renderer = new Renderer(props.stream);\r\n      rendererView = await renderer.createView({ scalingMode: 'Crop' });\r\n\r\n      // we need to check if the stream is available still and if the id is what we expect\r\n      if (container && container.childElementCount === 0) {\r\n        container.appendChild(rendererView.target);\r\n      }\r\n    } else {\r\n      setAvailable(false);\r\n\r\n      if (rendererView) {\r\n        rendererView.dispose();\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!stream) {\r\n      return;\r\n    }\r\n\r\n    stream.on('availabilityChanged', renderStream);\r\n\r\n    if (stream.isAvailable) {\r\n      renderStream();\r\n    }\r\n  }, [stream, renderStream]);\r\n\r\n  return (\r\n    <div className={mediaContainer}>\r\n      <div style={{ display: available ? 'block' : 'none' }} className={mediaContainer} id={streamId} />\r\n      <Image style={{ display: available ? 'none' : 'block' }} {...imageProps} />\r\n      <Label className={videoHint}>{props.label}</Label>\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}