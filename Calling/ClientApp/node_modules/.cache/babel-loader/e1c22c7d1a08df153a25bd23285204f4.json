{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{mediaGalleryGridStyle,mediaGalleryStyle}from'./styles/MediaGallery.styles';import{utils}from'../Utils/Utils';import LocalStreamMedia from'./LocalStreamMedia';import RemoteStreamMedia from'./RemoteStreamMedia';export default(function(props){var _useState=useState(1),_useState2=_slicedToArray(_useState,2),gridCol=_useState2[0],setGridCol=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),gridRow=_useState4[0],setGridRow=_useState4[1];var calculateNumberOfRows=React.useCallback(function(participants,gridCol){return Math.ceil((participants.length+1)/gridCol);},[]);var calculateNumberOfColumns=React.useCallback(function(participants){return participants&&participants.length>0?Math.ceil(Math.sqrt(participants.length+1)):1;},[]);var getMediaGalleryTilesForParticipants=function getMediaGalleryTilesForParticipants(participants,userId){// create a RemoteStreamMedia component for every remote participant\nvar remoteParticipantsMediaGalleryItems=participants.map(function(participant){var _participant$displayN;return/*#__PURE__*/React.createElement(\"div\",{className:mediaGalleryStyle},/*#__PURE__*/React.createElement(RemoteStreamMedia,{key:utils.getId(participant.identifier),stream:participant.videoStreams[0],label:(_participant$displayN=participant.displayName)!==null&&_participant$displayN!==void 0?_participant$displayN:utils.getId(participant.identifier)}));});// create a LocalStreamMedia component for the local participant\nvar localParticipantMediaGalleryItem=/*#__PURE__*/React.createElement(\"div\",{key:userId,className:mediaGalleryStyle},/*#__PURE__*/React.createElement(LocalStreamMedia,{label:userId,stream:props.localVideoStream}));// add the LocalStreamMedia at the beginning of the list\nremoteParticipantsMediaGalleryItems.unshift(localParticipantMediaGalleryItem);return remoteParticipantsMediaGalleryItems;};var numberOfColumns=calculateNumberOfColumns(props.remoteParticipants);if(numberOfColumns!==gridCol)setGridCol(numberOfColumns);var numberOfRows=calculateNumberOfRows(props.remoteParticipants,gridCol);if(numberOfRows!==gridRow)setGridRow(numberOfRows);return/*#__PURE__*/React.createElement(\"div\",{className:mediaGalleryGridStyle,style:{gridTemplateRows:\"repeat(\".concat(gridRow,\", minmax(0, 1fr))\"),gridTemplateColumns:\"repeat(\".concat(gridCol,\", 1fr)\")}},getMediaGalleryTilesForParticipants(props.remoteParticipants,props.userId));});","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/components/MediaGallery.tsx"],"names":["React","useState","mediaGalleryGridStyle","mediaGalleryStyle","utils","LocalStreamMedia","RemoteStreamMedia","props","gridCol","setGridCol","gridRow","setGridRow","calculateNumberOfRows","useCallback","participants","Math","ceil","length","calculateNumberOfColumns","sqrt","getMediaGalleryTilesForParticipants","userId","remoteParticipantsMediaGalleryItems","map","participant","getId","identifier","videoStreams","displayName","localParticipantMediaGalleryItem","localVideoStream","unshift","numberOfColumns","remoteParticipants","numberOfRows","gridTemplateRows","gridTemplateColumns"],"mappings":"0OAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,qBAAT,CAAgCC,iBAAhC,KAAyD,8BAAzD,CAEA,OAASC,KAAT,KAAsB,gBAAtB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,oBAA7B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CAQA,eAAe,SAACC,KAAD,CAA2C,eAC1BN,QAAQ,CAAC,CAAD,CADkB,wCACjDO,OADiD,eACxCC,UADwC,8BAE1BR,QAAQ,CAAC,CAAD,CAFkB,yCAEjDS,OAFiD,eAExCC,UAFwC,eAIxD,GAAMC,CAAAA,qBAAqB,CAAGZ,KAAK,CAACa,WAAN,CAC5B,SAACC,YAAD,CAAeN,OAAf,QAA2BO,CAAAA,IAAI,CAACC,IAAL,CAAU,CAACF,YAAY,CAACG,MAAb,CAAsB,CAAvB,EAA4BT,OAAtC,CAA3B,EAD4B,CAE5B,EAF4B,CAA9B,CAIA,GAAMU,CAAAA,wBAAwB,CAAGlB,KAAK,CAACa,WAAN,CAC/B,SAACC,YAAD,QAAmBA,CAAAA,YAAY,EAAIA,YAAY,CAACG,MAAb,CAAsB,CAAtC,CAA0CF,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACI,IAAL,CAAUL,YAAY,CAACG,MAAb,CAAsB,CAAhC,CAAV,CAA1C,CAA0F,CAA7G,EAD+B,CAE/B,EAF+B,CAAjC,CAIA,GAAMG,CAAAA,mCAAmC,CAAG,QAAtCA,CAAAA,mCAAsC,CAACN,YAAD,CAAoCO,MAApC,CAAuD,CACjG;AACA,GAAMC,CAAAA,mCAAmC,CAAGR,YAAY,CAACS,GAAb,CAAiB,SAACC,WAAD,+CAC3D,2BAAK,SAAS,CAAErB,iBAAhB,eACE,oBAAC,iBAAD,EACE,GAAG,CAAEC,KAAK,CAACqB,KAAN,CAAYD,WAAW,CAACE,UAAxB,CADP,CAEE,MAAM,CAAEF,WAAW,CAACG,YAAZ,CAAyB,CAAzB,CAFV,CAGE,KAAK,wBAAEH,WAAW,CAACI,WAAd,+DAA6BxB,KAAK,CAACqB,KAAN,CAAYD,WAAW,CAACE,UAAxB,CAHpC,EADF,CAD2D,EAAjB,CAA5C,CAUA;AACA,GAAMG,CAAAA,gCAAgC,cACpC,2BAAK,GAAG,CAAER,MAAV,CAAkB,SAAS,CAAElB,iBAA7B,eACE,oBAAC,gBAAD,EAAkB,KAAK,CAAEkB,MAAzB,CAAiC,MAAM,CAAEd,KAAK,CAACuB,gBAA/C,EADF,CADF,CAMA;AACAR,mCAAmC,CAACS,OAApC,CAA4CF,gCAA5C,EAEA,MAAOP,CAAAA,mCAAP,CACD,CAvBD,CAyBA,GAAMU,CAAAA,eAAe,CAAGd,wBAAwB,CAACX,KAAK,CAAC0B,kBAAP,CAAhD,CACA,GAAID,eAAe,GAAKxB,OAAxB,CAAiCC,UAAU,CAACuB,eAAD,CAAV,CACjC,GAAME,CAAAA,YAAY,CAAGtB,qBAAqB,CAACL,KAAK,CAAC0B,kBAAP,CAA2BzB,OAA3B,CAA1C,CACA,GAAI0B,YAAY,GAAKxB,OAArB,CAA8BC,UAAU,CAACuB,YAAD,CAAV,CAE9B,mBACE,2BACE,SAAS,CAAEhC,qBADb,CAEE,KAAK,CAAE,CACLiC,gBAAgB,kBAAYzB,OAAZ,qBADX,CAEL0B,mBAAmB,kBAAY5B,OAAZ,UAFd,CAFT,EAOGY,mCAAmC,CAACb,KAAK,CAAC0B,kBAAP,CAA2B1B,KAAK,CAACc,MAAjC,CAPtC,CADF,CAWD,CArDD","sourcesContent":["import React, { useState } from 'react';\r\nimport { mediaGalleryGridStyle, mediaGalleryStyle } from './styles/MediaGallery.styles';\r\nimport { RemoteParticipant, LocalVideoStream } from '@azure/communication-calling';\r\nimport { utils } from '../Utils/Utils';\r\nimport LocalStreamMedia from './LocalStreamMedia';\r\nimport RemoteStreamMedia from './RemoteStreamMedia';\r\n\r\nexport interface MediaGalleryProps {\r\n  userId: string;\r\n  remoteParticipants: RemoteParticipant[];\r\n  localVideoStream: LocalVideoStream;\r\n}\r\n\r\nexport default (props: MediaGalleryProps): JSX.Element => {\r\n  const [gridCol, setGridCol] = useState(1);\r\n  const [gridRow, setGridRow] = useState(1);\r\n\r\n  const calculateNumberOfRows = React.useCallback(\r\n    (participants, gridCol) => Math.ceil((participants.length + 1) / gridCol),\r\n    []\r\n  );\r\n  const calculateNumberOfColumns = React.useCallback(\r\n    (participants) => (participants && participants.length > 0 ? Math.ceil(Math.sqrt(participants.length + 1)) : 1),\r\n    []\r\n  );\r\n  const getMediaGalleryTilesForParticipants = (participants: RemoteParticipant[], userId: string) => {\r\n    // create a RemoteStreamMedia component for every remote participant\r\n    const remoteParticipantsMediaGalleryItems = participants.map((participant) => (\r\n      <div className={mediaGalleryStyle}>\r\n        <RemoteStreamMedia\r\n          key={utils.getId(participant.identifier)}\r\n          stream={participant.videoStreams[0]}\r\n          label={participant.displayName ?? utils.getId(participant.identifier)}\r\n        />\r\n      </div>\r\n    ));\r\n\r\n    // create a LocalStreamMedia component for the local participant\r\n    const localParticipantMediaGalleryItem = (\r\n      <div key={userId} className={mediaGalleryStyle}>\r\n        <LocalStreamMedia label={userId} stream={props.localVideoStream} />\r\n      </div>\r\n    );\r\n\r\n    // add the LocalStreamMedia at the beginning of the list\r\n    remoteParticipantsMediaGalleryItems.unshift(localParticipantMediaGalleryItem);\r\n\r\n    return remoteParticipantsMediaGalleryItems;\r\n  };\r\n\r\n  const numberOfColumns = calculateNumberOfColumns(props.remoteParticipants);\r\n  if (numberOfColumns !== gridCol) setGridCol(numberOfColumns);\r\n  const numberOfRows = calculateNumberOfRows(props.remoteParticipants, gridCol);\r\n  if (numberOfRows !== gridRow) setGridRow(numberOfRows);\r\n\r\n  return (\r\n    <div\r\n      className={mediaGalleryGridStyle}\r\n      style={{\r\n        gridTemplateRows: `repeat(${gridRow}, minmax(0, 1fr))`,\r\n        gridTemplateColumns: `repeat(${gridCol}, 1fr)`\r\n      }}\r\n    >\r\n      {getMediaGalleryTilesForParticipants(props.remoteParticipants, props.userId)}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}