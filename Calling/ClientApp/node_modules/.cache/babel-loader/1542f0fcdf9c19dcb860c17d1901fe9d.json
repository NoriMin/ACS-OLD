{"ast":null,"code":"import _objectSpread from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";import{SET_MIC,SET_SHARE_SCREEN,RESET_CONTROLS}from'../actions/controls';var initialState={mic:false,localVideo:false,shareScreen:false};export var controlsReducer=function controlsReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case SET_MIC:return _objectSpread(_objectSpread({},state),{},{mic:action.mic});case SET_SHARE_SCREEN:return _objectSpread(_objectSpread({},state),{},{shareScreen:action.shareScreen});case RESET_CONTROLS:return initialState;default:return state;}};","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/core/reducers/controls.ts"],"names":["SET_MIC","SET_SHARE_SCREEN","RESET_CONTROLS","initialState","mic","localVideo","shareScreen","controlsReducer","state","action","type"],"mappings":"yOACA,OAASA,OAAT,CAAkBC,gBAAlB,CAAoCC,cAApC,KAAwE,qBAAxE,CAQA,GAAMC,CAAAA,YAA2B,CAAG,CAClCC,GAAG,CAAE,KAD6B,CAElCC,UAAU,CAAE,KAFsB,CAGlCC,WAAW,CAAE,KAHqB,CAApC,CAMA,MAAO,IAAMC,CAAAA,eAAqD,CAAG,QAAxDA,CAAAA,eAAwD,EAGjD,IAFlBC,CAAAA,KAEkB,2DAFVL,YAEU,IADlBM,CAAAA,MACkB,2CAClB,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKV,CAAAA,OAAL,CACE,sCAAYQ,KAAZ,MAAmBJ,GAAG,CAAEK,MAAM,CAACL,GAA/B,GACF,IAAKH,CAAAA,gBAAL,CACE,sCAAYO,KAAZ,MAAmBF,WAAW,CAAEG,MAAM,CAACH,WAAvC,GACF,IAAKJ,CAAAA,cAAL,CACE,MAAOC,CAAAA,YAAP,CACF,QACE,MAAOK,CAAAA,KAAP,CARJ,CAUD,CAdM","sourcesContent":["import { Reducer } from 'redux';\r\nimport { SET_MIC, SET_SHARE_SCREEN, RESET_CONTROLS, ControlTypes } from '../actions/controls';\r\n\r\nexport interface ControlsState {\r\n  mic: boolean;\r\n  localVideo: boolean;\r\n  shareScreen: boolean;\r\n}\r\n\r\nconst initialState: ControlsState = {\r\n  mic: false,\r\n  localVideo: false,\r\n  shareScreen: false\r\n};\r\n\r\nexport const controlsReducer: Reducer<ControlsState, ControlTypes> = (\r\n  state = initialState,\r\n  action: ControlTypes\r\n): ControlsState => {\r\n  switch (action.type) {\r\n    case SET_MIC:\r\n      return { ...state, mic: action.mic };\r\n    case SET_SHARE_SCREEN:\r\n      return { ...state, shareScreen: action.shareScreen };\r\n    case RESET_CONTROLS:\r\n      return initialState;\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}