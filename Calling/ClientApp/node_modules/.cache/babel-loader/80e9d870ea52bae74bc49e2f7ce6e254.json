{"ast":null,"code":"import React from'react';import NewLocalSettings from'./LocalSettings';import ParticipantStack from'../containers/ParticipantStack';import{Stack,Icon,PrimaryButton,TextField,Separator}from'@fluentui/react';import{fullHeightStyles,paneFooterStyles,paneFooterTokens,textFieldStyles,paneHeaderStyle,footerMainTextStyle,copyLinkButtonStyle,copyIconStyle,settingsContainerStyle,paneHeaderTextStyle}from'./styles/CommandPanel.styles';export var CommandPanelTypes;(function(CommandPanelTypes){CommandPanelTypes[\"None\"]=\"none\";CommandPanelTypes[\"People\"]=\"People\";CommandPanelTypes[\"Settings\"]=\"Settings\";})(CommandPanelTypes||(CommandPanelTypes={}));var copyJoinLink=function copyJoinLink(){var inputElement=document.getElementById('inputText');inputElement.select();document.execCommand('copy');};export default(function(props){var invitePeopleString='Invite people to join';var copyJoinInfoString='Copy join info';return/*#__PURE__*/React.createElement(Stack,{styles:fullHeightStyles},/*#__PURE__*/React.createElement(Stack.Item,{className:paneHeaderStyle},/*#__PURE__*/React.createElement(\"div\",{className:paneHeaderTextStyle},props.selectedPane)),/*#__PURE__*/React.createElement(Stack.Item,{styles:fullHeightStyles},props.selectedPane===CommandPanelTypes.People&&/*#__PURE__*/React.createElement(Stack,{verticalAlign:\"space-between\",styles:fullHeightStyles},/*#__PURE__*/React.createElement(ParticipantStack,null),/*#__PURE__*/React.createElement(Stack,{styles:paneFooterStyles,tokens:paneFooterTokens},/*#__PURE__*/React.createElement(Separator,null),/*#__PURE__*/React.createElement(\"div\",{className:footerMainTextStyle},invitePeopleString),/*#__PURE__*/React.createElement(TextField,{styles:textFieldStyles,id:\"inputText\",type:\"text\",value:\"\".concat(document.baseURI)}),/*#__PURE__*/React.createElement(PrimaryButton,{className:copyLinkButtonStyle,onClick:copyJoinLink},/*#__PURE__*/React.createElement(Icon,{iconName:\"Copy\",className:copyIconStyle}),copyJoinInfoString))),props.selectedPane===CommandPanelTypes.Settings&&/*#__PURE__*/React.createElement(\"div\",{className:settingsContainerStyle},/*#__PURE__*/React.createElement(NewLocalSettings,{videoDeviceList:props.videoDeviceList,audioDeviceList:props.audioDeviceList,audioDeviceInfo:props.audioDeviceInfo,videoDeviceInfo:props.videoDeviceInfo,setVideoDeviceInfo:props.setVideoDeviceInfo,setAudioDeviceInfo:props.setAudioDeviceInfo}))));});","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/components/CommandPanel.tsx"],"names":["React","NewLocalSettings","ParticipantStack","Stack","Icon","PrimaryButton","TextField","Separator","fullHeightStyles","paneFooterStyles","paneFooterTokens","textFieldStyles","paneHeaderStyle","footerMainTextStyle","copyLinkButtonStyle","copyIconStyle","settingsContainerStyle","paneHeaderTextStyle","CommandPanelTypes","copyJoinLink","inputElement","document","getElementById","select","execCommand","props","invitePeopleString","copyJoinInfoString","selectedPane","People","baseURI","Settings","videoDeviceList","audioDeviceList","audioDeviceInfo","videoDeviceInfo","setVideoDeviceInfo","setAudioDeviceInfo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,gBAAP,KAA6B,iBAA7B,CACA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CAEA,OAASC,KAAT,CAAgBC,IAAhB,CAAsBC,aAAtB,CAAqCC,SAArC,CAAgDC,SAAhD,KAAiE,iBAAjE,CACA,OACEC,gBADF,CAEEC,gBAFF,CAGEC,gBAHF,CAIEC,eAJF,CAKEC,eALF,CAMEC,mBANF,CAOEC,mBAPF,CAQEC,aARF,CASEC,sBATF,CAUEC,mBAVF,KAWO,8BAXP,CAuBA,UAAYC,CAAAA,iBAAZ,C,UAAYA,iB,EAAAA,iB,gBAAAA,iB,oBAAAA,iB,2BAAAA,iB,GAAAA,iB,MAMZ,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,EAAM,CACzB,GAAMC,CAAAA,YAAY,CAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAArB,CACAF,YAAY,CAACG,MAAb,GACAF,QAAQ,CAACG,WAAT,CAAqB,MAArB,EACD,CAJD,CAKA,eAAe,SAACC,KAAD,CAA2C,CACxD,GAAMC,CAAAA,kBAAkB,CAAG,uBAA3B,CACA,GAAMC,CAAAA,kBAAkB,CAAG,gBAA3B,CAEA,mBACE,oBAAC,KAAD,EAAO,MAAM,CAAEnB,gBAAf,eACE,oBAAC,KAAD,CAAO,IAAP,EAAY,SAAS,CAAEI,eAAvB,eACE,2BAAK,SAAS,CAAEK,mBAAhB,EAAsCQ,KAAK,CAACG,YAA5C,CADF,CADF,cAIE,oBAAC,KAAD,CAAO,IAAP,EAAY,MAAM,CAAEpB,gBAApB,EACGiB,KAAK,CAACG,YAAN,GAAuBV,iBAAiB,CAACW,MAAzC,eACC,oBAAC,KAAD,EAAO,aAAa,CAAC,eAArB,CAAqC,MAAM,CAAErB,gBAA7C,eACE,oBAAC,gBAAD,MADF,cAEE,oBAAC,KAAD,EAAO,MAAM,CAAEC,gBAAf,CAAiC,MAAM,CAAEC,gBAAzC,eACE,oBAAC,SAAD,MADF,cAEE,2BAAK,SAAS,CAAEG,mBAAhB,EAAsCa,kBAAtC,CAFF,cAGE,oBAAC,SAAD,EAAW,MAAM,CAAEf,eAAnB,CAAoC,EAAE,CAAC,WAAvC,CAAmD,IAAI,CAAC,MAAxD,CAA+D,KAAK,WAAKU,QAAQ,CAACS,OAAd,CAApE,EAHF,cAIE,oBAAC,aAAD,EAAe,SAAS,CAAEhB,mBAA1B,CAA+C,OAAO,CAAEK,YAAxD,eACE,oBAAC,IAAD,EAAM,QAAQ,CAAC,MAAf,CAAsB,SAAS,CAAEJ,aAAjC,EADF,CAEGY,kBAFH,CAJF,CAFF,CAFJ,CAeGF,KAAK,CAACG,YAAN,GAAuBV,iBAAiB,CAACa,QAAzC,eACC,2BAAK,SAAS,CAAEf,sBAAhB,eACE,oBAAC,gBAAD,EACE,eAAe,CAAES,KAAK,CAACO,eADzB,CAEE,eAAe,CAAEP,KAAK,CAACQ,eAFzB,CAGE,eAAe,CAAER,KAAK,CAACS,eAHzB,CAIE,eAAe,CAAET,KAAK,CAACU,eAJzB,CAKE,kBAAkB,CAAEV,KAAK,CAACW,kBAL5B,CAME,kBAAkB,CAAEX,KAAK,CAACY,kBAN5B,EADF,CAhBJ,CAJF,CADF,CAmCD,CAvCD","sourcesContent":["import React from 'react';\r\nimport NewLocalSettings from './LocalSettings';\r\nimport ParticipantStack from '../containers/ParticipantStack';\r\nimport { VideoDeviceInfo, AudioDeviceInfo } from '@azure/communication-calling';\r\nimport { Stack, Icon, PrimaryButton, TextField, Separator } from '@fluentui/react';\r\nimport {\r\n  fullHeightStyles,\r\n  paneFooterStyles,\r\n  paneFooterTokens,\r\n  textFieldStyles,\r\n  paneHeaderStyle,\r\n  footerMainTextStyle,\r\n  copyLinkButtonStyle,\r\n  copyIconStyle,\r\n  settingsContainerStyle,\r\n  paneHeaderTextStyle\r\n} from './styles/CommandPanel.styles';\r\n\r\nexport interface CommandPanelProps {\r\n  selectedPane: string;\r\n  videoDeviceInfo: VideoDeviceInfo;\r\n  videoDeviceList: VideoDeviceInfo[];\r\n  audioDeviceList: AudioDeviceInfo[];\r\n  audioDeviceInfo: AudioDeviceInfo;\r\n  setSelectedPane: any;\r\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\r\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\r\n}\r\nexport enum CommandPanelTypes {\r\n  None = 'none',\r\n  People = 'People',\r\n  Settings = 'Settings'\r\n}\r\n\r\nconst copyJoinLink = () => {\r\n  const inputElement = document.getElementById('inputText') as HTMLInputElement;\r\n  inputElement.select();\r\n  document.execCommand('copy');\r\n};\r\nexport default (props: CommandPanelProps): JSX.Element => {\r\n  const invitePeopleString = 'Invite people to join';\r\n  const copyJoinInfoString = 'Copy join info';\r\n\r\n  return (\r\n    <Stack styles={fullHeightStyles}>\r\n      <Stack.Item className={paneHeaderStyle}>\r\n        <div className={paneHeaderTextStyle}>{props.selectedPane}</div>\r\n      </Stack.Item>\r\n      <Stack.Item styles={fullHeightStyles}>\r\n        {props.selectedPane === CommandPanelTypes.People && (\r\n          <Stack verticalAlign=\"space-between\" styles={fullHeightStyles}>\r\n            <ParticipantStack />\r\n            <Stack styles={paneFooterStyles} tokens={paneFooterTokens}>\r\n              <Separator />\r\n              <div className={footerMainTextStyle}>{invitePeopleString}</div>\r\n              <TextField styles={textFieldStyles} id=\"inputText\" type=\"text\" value={`${document.baseURI}`}></TextField>\r\n              <PrimaryButton className={copyLinkButtonStyle} onClick={copyJoinLink}>\r\n                <Icon iconName=\"Copy\" className={copyIconStyle} />\r\n                {copyJoinInfoString}\r\n              </PrimaryButton>\r\n            </Stack>\r\n          </Stack>\r\n        )}\r\n        {props.selectedPane === CommandPanelTypes.Settings && (\r\n          <div className={settingsContainerStyle}>\r\n            <NewLocalSettings\r\n              videoDeviceList={props.videoDeviceList}\r\n              audioDeviceList={props.audioDeviceList}\r\n              audioDeviceInfo={props.audioDeviceInfo}\r\n              videoDeviceInfo={props.videoDeviceInfo}\r\n              setVideoDeviceInfo={props.setVideoDeviceInfo}\r\n              setAudioDeviceInfo={props.setAudioDeviceInfo}\r\n            />\r\n          </div>\r\n        )}\r\n      </Stack.Item>\r\n    </Stack>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}