{"ast":null,"code":"import _slicedToArray from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";// © Microsoft Corporation. All rights reserved.\nimport React,{useState,useEffect}from'react';import GroupCall from'./containers/GroupCall';import{createStore,applyMiddleware}from'redux';import{Provider}from'react-redux';import{reducer}from'./core/reducers';import thunk from'redux-thunk';import EndCall from'./components/EndCall';import HomeScreen from'./components/HomeScreen';import ConfigurationScreen from'./containers/Configuration';import{v1 as createGUID}from'uuid';import{loadTheme,initializeIcons}from'@fluentui/react';import{utils}from'./Utils/Utils';var sdkVersion=require('../package.json').dependencies['@azure/communication-calling'];var lastUpdated=\"Last Updated \".concat(utils.getBuildTime(),\" with @azure/communication-calling:\").concat(sdkVersion);loadTheme({});initializeIcons();var store=createStore(reducer,applyMiddleware(thunk));var App=function App(){var _useState=useState('home'),_useState2=_slicedToArray(_useState,2),page=_useState2[0],setPage=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),groupId=_useState4[0],setGroupId=_useState4[1];var _useState5=useState(0),_useState6=_slicedToArray(_useState5,2),screenWidth=_useState6[0],setScreenWidth=_useState6[1];useEffect(function(){var setWindowWidth=function setWindowWidth(){var width=typeof window!=='undefined'?window.innerWidth:0;setScreenWidth(width);};setWindowWidth();window.addEventListener('resize',setWindowWidth);return function(){return window.removeEventListener('resize',setWindowWidth);};},[]);var createUserId=function createUserId(){return'user'+Math.ceil(Math.random()*1000);};var getGroupIdFromUrl=function getGroupIdFromUrl(){var urlParams=new URLSearchParams(window.location.search);return urlParams.get('groupId');};var getGroupId=function getGroupId(){if(groupId)return groupId;var uri_gid=getGroupIdFromUrl();var gid=uri_gid==null||uri_gid===''?createGUID():uri_gid;console.log('The group id is '+gid);setGroupId(gid);return gid;};var getContent=function getContent(){if(page==='home'){return/*#__PURE__*/React.createElement(HomeScreen,{startCallHandler:function startCallHandler(){window.history.pushState({},document.title,window.location.href+'?groupId='+getGroupId());}});}else if(page==='configuration'){return/*#__PURE__*/React.createElement(ConfigurationScreen,{startCallHandler:function startCallHandler(){return setPage('call');},unsupportedStateHandler:function unsupportedStateHandler(){return setPage('error');},endCallHandler:function endCallHandler(){return setPage('endCall');},groupId:getGroupId(),userId:createUserId(),screenWidth:screenWidth});}else if(page==='call'){return/*#__PURE__*/React.createElement(GroupCall,{endCallHandler:function endCallHandler(){return setPage('endCall');},groupId:getGroupId(),userId:createUserId(),screenWidth:screenWidth});}else if(page==='endCall'){return/*#__PURE__*/React.createElement(EndCall,{rejoinHandler:function rejoinHandler(){setPage('call');},homeHandler:function homeHandler(){window.location.href=window.location.href.split('?')[0];}});}else{// page === 'error'\nwindow.document.title='Unsupported browser';return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"a\",{href:\"https://aka.ms/ACS-CallingSupport#calling-client-library-browser-support\"},\"Learn more\"),\"\\xA0about browsers and platforms supported by the web calling sdk\");}};if(getGroupIdFromUrl()&&page==='home'){setPage('configuration');}if(utils.isMobileSession()||utils.isSmallScreen()){console.log('ACS Calling sample: This is experimental behaviour');}return/*#__PURE__*/React.createElement(Provider,{store:store},getContent());};window.setTimeout(function(){try{console.log(\"ACS sample group calling app: \".concat(lastUpdated));}catch(e){}},0);export default App;","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/App.tsx"],"names":["React","useState","useEffect","GroupCall","createStore","applyMiddleware","Provider","reducer","thunk","EndCall","HomeScreen","ConfigurationScreen","v1","createGUID","loadTheme","initializeIcons","utils","sdkVersion","require","dependencies","lastUpdated","getBuildTime","store","App","page","setPage","groupId","setGroupId","screenWidth","setScreenWidth","setWindowWidth","width","window","innerWidth","addEventListener","removeEventListener","createUserId","Math","ceil","random","getGroupIdFromUrl","urlParams","URLSearchParams","location","search","get","getGroupId","uri_gid","gid","console","log","getContent","history","pushState","document","title","href","split","isMobileSession","isSmallScreen","setTimeout","e"],"mappings":"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","sourcesContent":["// © Microsoft Corporation. All rights reserved.\r\nimport React, { useState, useEffect } from 'react';\r\nimport GroupCall from './containers/GroupCall';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport { reducer } from './core/reducers';\r\nimport thunk from 'redux-thunk';\r\nimport EndCall from './components/EndCall';\r\nimport HomeScreen from './components/HomeScreen';\r\nimport ConfigurationScreen from './containers/Configuration';\r\nimport { v1 as createGUID } from 'uuid';\r\nimport { loadTheme, initializeIcons } from '@fluentui/react';\r\nimport { utils } from './Utils/Utils';\r\n\r\nconst sdkVersion = require('../package.json').dependencies['@azure/communication-calling'];\r\nconst lastUpdated = `Last Updated ${utils.getBuildTime()} with @azure/communication-calling:${sdkVersion}`;\r\n\r\nloadTheme({});\r\ninitializeIcons();\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nconst App = () => {\r\n  const [page, setPage] = useState('home');\r\n  const [groupId, setGroupId] = useState('');\r\n  const [screenWidth, setScreenWidth] = useState(0);\r\n\r\n  useEffect(() => {\r\n    const setWindowWidth = () => {\r\n      const width = typeof window !== 'undefined' ? window.innerWidth : 0;\r\n      setScreenWidth(width);\r\n    };\r\n    setWindowWidth();\r\n    window.addEventListener('resize', setWindowWidth);\r\n    return () => window.removeEventListener('resize', setWindowWidth);\r\n  }, []);\r\n\r\n  const createUserId = () => 'user' + Math.ceil(Math.random() * 1000);\r\n\r\n  const getGroupIdFromUrl = () => {\r\n    const urlParams = new URLSearchParams(window.location.search);\r\n    return urlParams.get('groupId');\r\n  };\r\n\r\n  const getGroupId = () => {\r\n    if (groupId) return groupId;\r\n    const uri_gid = getGroupIdFromUrl();\r\n    const gid = uri_gid == null || uri_gid === '' ? createGUID() : uri_gid;\r\n    console.log('The group id is ' + gid);\r\n    setGroupId(gid);\r\n    return gid;\r\n  };\r\n\r\n  const getContent = () => {\r\n    if (page === 'home') {\r\n      return (\r\n        <HomeScreen\r\n          startCallHandler={() => {\r\n            window.history.pushState({}, document.title, window.location.href + '?groupId=' + getGroupId());\r\n          }}\r\n        />\r\n      );\r\n    } else if (page === 'configuration') {\r\n      return (\r\n        <ConfigurationScreen\r\n          startCallHandler={() => setPage('call')}\r\n          unsupportedStateHandler={() => setPage('error')}\r\n          endCallHandler={() => setPage('endCall')}\r\n          groupId={getGroupId()}\r\n          userId={createUserId()}\r\n          screenWidth={screenWidth}\r\n        />\r\n      );\r\n    } else if (page === 'call') {\r\n      return (\r\n        <GroupCall\r\n          endCallHandler={() => setPage('endCall')}\r\n          groupId={getGroupId()}\r\n          userId={createUserId()}\r\n          screenWidth={screenWidth}\r\n        />\r\n      );\r\n    } else if (page === 'endCall') {\r\n      return (\r\n        <EndCall\r\n          rejoinHandler={() => {\r\n            setPage('call');\r\n          }}\r\n          homeHandler={() => {\r\n            window.location.href = window.location.href.split('?')[0];\r\n          }}\r\n        />\r\n      );\r\n    } else {\r\n      // page === 'error'\r\n      window.document.title = 'Unsupported browser';\r\n      return (\r\n        <>\r\n          <a href=\"https://aka.ms/ACS-CallingSupport#calling-client-library-browser-support\">Learn more</a>&nbsp;about\r\n          browsers and platforms supported by the web calling sdk\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  if (getGroupIdFromUrl() && page === 'home') {\r\n    setPage('configuration');\r\n  }\r\n\r\n  if (utils.isMobileSession() || utils.isSmallScreen()) {\r\n    console.log('ACS Calling sample: This is experimental behaviour');\r\n  }\r\n\r\n  return <Provider store={store}>{getContent()}</Provider>;\r\n};\r\n\r\nwindow.setTimeout(() => {\r\n  try {\r\n    console.log(`ACS sample group calling app: ${lastUpdated}`);\r\n  } catch (e) {}\r\n}, 0);\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}