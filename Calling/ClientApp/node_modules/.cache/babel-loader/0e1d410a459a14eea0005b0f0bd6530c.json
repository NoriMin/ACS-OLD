{"ast":null,"code":"import React from'react';import{TextField}from'@fluentui/react';import{inputBoxStyle,inputBoxTextStyle,inputBoxWarningStyle,labelFontStyle,warningStyle}from'./styles/Configuration.styles';var TextFieldStyleProps={root:{height:'auto'}};export default(function(props){var onNameTextChange=function onNameTextChange(event){props.setName(event.target.value);if(event.target.value){props.setEmptyWarning(false);}else{props.setEmptyWarning(true);}};return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:labelFontStyle},\"Name\"),/*#__PURE__*/React.createElement(TextField,{autoComplete:\"off\",inputClassName:inputBoxTextStyle,ariaLabel:\"Choose your name\",borderless:true,className:props.isEmpty?inputBoxWarningStyle:inputBoxStyle,onChange:onNameTextChange,id:\"name\",placeholder:\"Enter your name\",defaultValue:props.name,styles:TextFieldStyleProps}),props.isEmpty&&/*#__PURE__*/React.createElement(\"div\",{role:\"alert\",className:warningStyle},' ',\"Name cannot be empty\",' '));});","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/components/DisplayNameField.tsx"],"names":["React","TextField","inputBoxStyle","inputBoxTextStyle","inputBoxWarningStyle","labelFontStyle","warningStyle","TextFieldStyleProps","root","height","props","onNameTextChange","event","setName","target","value","setEmptyWarning","isEmpty","name"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,SAAT,KAA0B,iBAA1B,CAEA,OACEC,aADF,CAEEC,iBAFF,CAGEC,oBAHF,CAIEC,cAJF,CAKEC,YALF,KAMO,+BANP,CAeA,GAAMC,CAAAA,mBAAmB,CAAG,CAC1BC,IAAI,CAAE,CACJC,MAAM,CAAE,MADJ,CADoB,CAA5B,CAMA,eAAe,SAACC,KAAD,CAA+C,CAC5D,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAgB,CACvCF,KAAK,CAACG,OAAN,CAAcD,KAAK,CAACE,MAAN,CAAaC,KAA3B,EACA,GAAIH,KAAK,CAACE,MAAN,CAAaC,KAAjB,CAAwB,CACtBL,KAAK,CAACM,eAAN,CAAsB,KAAtB,EACD,CAFD,IAEO,CACLN,KAAK,CAACM,eAAN,CAAsB,IAAtB,EACD,CACF,CAPD,CASA,mBACE,4CACE,2BAAK,SAAS,CAAEX,cAAhB,SADF,cAEE,oBAAC,SAAD,EACE,YAAY,CAAC,KADf,CAEE,cAAc,CAAEF,iBAFlB,CAGE,SAAS,CAAC,kBAHZ,CAIE,UAAU,CAAE,IAJd,CAKE,SAAS,CAAEO,KAAK,CAACO,OAAN,CAAgBb,oBAAhB,CAAuCF,aALpD,CAME,QAAQ,CAAES,gBANZ,CAOE,EAAE,CAAC,MAPL,CAQE,WAAW,CAAC,iBARd,CASE,YAAY,CAAED,KAAK,CAACQ,IATtB,CAUE,MAAM,CAAEX,mBAVV,EAFF,CAcGG,KAAK,CAACO,OAAN,eACC,2BAAK,IAAI,CAAC,OAAV,CAAkB,SAAS,CAAEX,YAA7B,EACG,GADH,wBAEuB,GAFvB,CAfJ,CADF,CAuBD,CAjCD","sourcesContent":["import React from 'react';\r\nimport { TextField } from '@fluentui/react';\r\n\r\nimport {\r\n  inputBoxStyle,\r\n  inputBoxTextStyle,\r\n  inputBoxWarningStyle,\r\n  labelFontStyle,\r\n  warningStyle\r\n} from './styles/Configuration.styles';\r\n\r\ninterface DisplayNameFieldProps {\r\n  setName(name: string): void;\r\n  name: string;\r\n  setEmptyWarning(isEmpty: boolean): void;\r\n  isEmpty: boolean;\r\n}\r\n\r\nconst TextFieldStyleProps = {\r\n  root: {\r\n    height: 'auto'\r\n  }\r\n};\r\n\r\nexport default (props: DisplayNameFieldProps): JSX.Element => {\r\n  const onNameTextChange = (event: any) => {\r\n    props.setName(event.target.value);\r\n    if (event.target.value) {\r\n      props.setEmptyWarning(false);\r\n    } else {\r\n      props.setEmptyWarning(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={labelFontStyle}>Name</div>\r\n      <TextField\r\n        autoComplete=\"off\"\r\n        inputClassName={inputBoxTextStyle}\r\n        ariaLabel=\"Choose your name\"\r\n        borderless={true}\r\n        className={props.isEmpty ? inputBoxWarningStyle : inputBoxStyle}\r\n        onChange={onNameTextChange}\r\n        id=\"name\"\r\n        placeholder=\"Enter your name\"\r\n        defaultValue={props.name}\r\n        styles={TextFieldStyleProps}\r\n      />\r\n      {props.isEmpty && (\r\n        <div role=\"alert\" className={warningStyle}>\r\n          {' '}\r\n          Name cannot be empty{' '}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}