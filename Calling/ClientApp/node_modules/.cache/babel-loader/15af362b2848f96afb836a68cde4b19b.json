{"ast":null,"code":"import _toConsumableArray from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"C:\\\\Users\\\\t-tamina\\\\source\\\\repos\\\\Communication\\\\samples\\\\Group Calling Hero Sample\\\\Web\\\\Calling\\\\ClientApp\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import{CallClient}from'@azure/communication-calling';import{AzureCommunicationUserCredential}from'@azure/communication-common';import{utils}from'../Utils/Utils';import{callAdded,callRemoved,setCallState,setParticipants,setCallAgent}from'./actions/calls';import{setMic,setShareScreen,resetControls}from'./actions/controls';import{setAudioDeviceInfo,setAudioDeviceList,setCameraPermission,setMicrophonePermission,setVideoDeviceInfo,setVideoDeviceList,setDeviceManager}from'./actions/devices';import{addScreenShareStream,resetStreams,removeScreenShareStream}from'./actions/streams';export var setMicrophone=function setMicrophone(mic){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch,getState){var state;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:state=getState();if(!(state===undefined||state.calls.call===undefined)){_context.next=4;break;}console.error('state or state.controls.mic is null');return _context.abrupt(\"return\");case 4:_context.prev=4;if(state.controls.mic){_context.next=10;break;}_context.next=8;return state.calls.call.unmute();case 8:_context.next=12;break;case 10:_context.next=12;return state.calls.call.mute();case 12:dispatch(setMic(mic));_context.next=18;break;case 15:_context.prev=15;_context.t0=_context[\"catch\"](4);console.error(_context.t0);case 18:case\"end\":return _context.stop();}}},_callee,null,[[4,15]]);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();};export var setShareUnshareScreen=function setShareUnshareScreen(shareScreen){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch,getState){var state;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:state=getState();if(!(state===undefined||state.calls.call===undefined)){_context2.next=4;break;}console.error('state or state.controls.shareScreen is null');return _context2.abrupt(\"return\");case 4:_context2.prev=4;if(state.controls.shareScreen){_context2.next=10;break;}_context2.next=8;return state.calls.call.startScreenSharing();case 8:_context2.next=12;break;case 10:_context2.next=12;return state.calls.call.stopScreenSharing();case 12:dispatch(setShareScreen(shareScreen));_context2.next=18;break;case 15:_context2.prev=15;_context2.t0=_context2[\"catch\"](4);console.error(_context2.t0);case 18:case\"end\":return _context2.stop();}}},_callee2,null,[[4,15]]);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}();};export var updateDevices=function updateDevices(){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch,getState){var state,deviceManager,cameraList,microphoneList;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:state=getState();deviceManager=state.devices.deviceManager;if(!(deviceManager==null)){_context3.next=5;break;}console.error('no device manager available');return _context3.abrupt(\"return\");case 5:_context3.next=7;return deviceManager.getCameraList();case 7:cameraList=_context3.sent;dispatch(setVideoDeviceList(cameraList));_context3.next=11;return deviceManager.getMicrophoneList();case 11:microphoneList=_context3.sent;dispatch(setAudioDeviceList(microphoneList));case 13:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x5,_x6){return _ref3.apply(this,arguments);};}();};export var initCallClient=function initCallClient(userId,unsupportedStateHandler,endCallHandler){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch,getState){var tokenResponse,options,userToken,callClient,tokenCredential,callAgent,deviceManager;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:_context4.prev=0;_context4.next=3;return utils.getTokenForUser(userId);case 3:tokenResponse=_context4.sent;options={};userToken=tokenResponse.value.token;if(!utils.isOnIphoneAndNotSafari()){_context4.next=9;break;}unsupportedStateHandler();return _context4.abrupt(\"return\");case 9:_context4.prev=9;callClient=new CallClient(options);_context4.next=17;break;case 13:_context4.prev=13;_context4.t0=_context4[\"catch\"](9);unsupportedStateHandler();return _context4.abrupt(\"return\");case 17:if(callClient){_context4.next=19;break;}return _context4.abrupt(\"return\");case 19:tokenCredential=new AzureCommunicationUserCredential(userToken);_context4.next=22;return callClient.createCallAgent(tokenCredential);case 22:callAgent=_context4.sent;if(!(callAgent===undefined)){_context4.next=25;break;}return _context4.abrupt(\"return\");case 25:callAgent.updateDisplayName(userId);_context4.next=28;return callClient.getDeviceManager();case 28:deviceManager=_context4.sent;dispatch(setDeviceManager(deviceManager));dispatch(setCallAgent(callAgent));subscribeToDeviceManager(deviceManager,dispatch,getState);callAgent.on('callsUpdated',function(e){e.added.forEach(function(addedCall){var state=getState();if(state.calls.call&&addedCall.isIncoming){addedCall.reject();return;}dispatch(callAdded(addedCall));addedCall.on('callStateChanged',function(){dispatch(setCallState(addedCall.state));});addedCall.on('isScreenSharingOnChanged',function(){dispatch(setShareScreen(addedCall.isScreenSharingOn));});addedCall.on('remoteParticipantsUpdated',function(ev){ev.added.forEach(function(addedRemoteParticipant){console.log('participantAdded',addedRemoteParticipant);subscribeToParticipant(addedRemoteParticipant,addedCall,dispatch,getState);dispatch(setParticipants(_toConsumableArray(addedCall.remoteParticipants.values())));});// we don't use the actual value we are just going to reset the remoteParticipants based on the call\nif(ev.removed.length>0){console.log('participantRemoved');dispatch(setParticipants(_toConsumableArray(addedCall.remoteParticipants.values())));}});var rp=_toConsumableArray(addedCall.remoteParticipants.values());rp.forEach(function(v){return subscribeToParticipant(v,addedCall,dispatch,getState);});dispatch(setParticipants(rp));dispatch(setCallState(addedCall.state));});e.removed.forEach(function(removedCall){console.log('callRemoved',removedCall);var state=getState();if(state.calls.call&&state.calls.call===removedCall){dispatch(callRemoved(removedCall,state.calls.group));dispatch(resetControls());dispatch(resetStreams());}});});_context4.next=38;break;case 35:_context4.prev=35;_context4.t1=_context4[\"catch\"](0);console.error(_context4.t1);case 38:case\"end\":return _context4.stop();}}},_callee4,null,[[0,35],[9,13]]);}));return function(_x7,_x8){return _ref4.apply(this,arguments);};}();};// what does the forEveryone parameter really mean?\nexport var endCall=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(call,options){return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:call.hangUp(options).catch(function(e){return console.error(e);});case 1:case\"end\":return _context5.stop();}}},_callee5);}));return function endCall(_x9,_x10){return _ref5.apply(this,arguments);};}();export var joinGroup=/*#__PURE__*/function(){var _ref6=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(callAgent,context,callOptions){return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:_context6.prev=0;_context6.next=3;return callAgent.join(context,callOptions);case 3:_context6.next=9;break;case 5:_context6.prev=5;_context6.t0=_context6[\"catch\"](0);console.log('Failed to join a call',_context6.t0);return _context6.abrupt(\"return\");case 9:case\"end\":return _context6.stop();}}},_callee6,null,[[0,5]]);}));return function joinGroup(_x11,_x12,_x13){return _ref6.apply(this,arguments);};}();export var addParticipant=/*#__PURE__*/function(){var _ref7=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee7(call,user){return _regeneratorRuntime.wrap(function _callee7$(_context7){while(1){switch(_context7.prev=_context7.next){case 0:call.addParticipant(user);case 1:case\"end\":return _context7.stop();}}},_callee7);}));return function addParticipant(_x14,_x15){return _ref7.apply(this,arguments);};}();export var removeParticipant=/*#__PURE__*/function(){var _ref8=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee8(call,user){return _regeneratorRuntime.wrap(function _callee8$(_context8){while(1){switch(_context8.prev=_context8.next){case 0:call.removeParticipant(user).catch(function(e){return console.error(e);});case 1:case\"end\":return _context8.stop();}}},_callee8);}));return function removeParticipant(_x16,_x17){return _ref8.apply(this,arguments);};}();var subscribeToParticipant=function subscribeToParticipant(participant,call,dispatch,getState){var userId=utils.getId(participant.identifier);participant.on('participantStateChanged',function(){console.log('participant stateChanged',userId,participant.state);dispatch(setParticipants(_toConsumableArray(call.remoteParticipants.values())));});participant.on('isSpeakingChanged',function(){dispatch(setParticipants(_toConsumableArray(call.remoteParticipants.values())));});participant.on('videoStreamsUpdated',function(e){e.added.forEach(function(addedStream){if(addedStream.type==='Video'){return;}addedStream.on('availabilityChanged',function(){if(addedStream.isAvailable){dispatch(addScreenShareStream(addedStream,participant));}else{dispatch(removeScreenShareStream(addedStream,participant));}});if(addedStream.isAvailable){dispatch(addScreenShareStream(addedStream,participant));}});});};var updateAudioDevices=/*#__PURE__*/function(){var _ref9=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee9(deviceManager,dispatch,getState){var microphoneList,state;return _regeneratorRuntime.wrap(function _callee9$(_context9){while(1){switch(_context9.prev=_context9.next){case 0:_context9.next=2;return deviceManager.getMicrophoneList();case 2:microphoneList=_context9.sent;dispatch(setAudioDeviceList(microphoneList));state=getState();if(state.devices.audioDeviceInfo===undefined&&microphoneList.length>0){dispatch(setAudioDeviceInfo(microphoneList[0]));deviceManager.setMicrophone(microphoneList[0]);}else if(state.devices.audioDeviceInfo&&!utils.isSelectedAudioDeviceInList(state.devices.audioDeviceInfo,microphoneList)){deviceManager.setMicrophone(state.devices.audioDeviceInfo);}case 6:case\"end\":return _context9.stop();}}},_callee9);}));return function updateAudioDevices(_x18,_x19,_x20){return _ref9.apply(this,arguments);};}();var updateVideoDevices=/*#__PURE__*/function(){var _ref10=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee10(deviceManager,dispatch,getState){var cameraList,state;return _regeneratorRuntime.wrap(function _callee10$(_context10){while(1){switch(_context10.prev=_context10.next){case 0:cameraList=deviceManager.getCameraList();dispatch(setVideoDeviceList(cameraList));state=getState();if(state.devices.videoDeviceInfo===undefined){dispatch(setVideoDeviceInfo(cameraList[0]));}else if(state.devices.videoDeviceInfo&&!utils.isSelectedVideoDeviceInList(state.devices.videoDeviceInfo,cameraList)){dispatch(setVideoDeviceInfo(state.devices.videoDeviceInfo));}case 4:case\"end\":return _context10.stop();}}},_callee10);}));return function updateVideoDevices(_x21,_x22,_x23){return _ref10.apply(this,arguments);};}();var subscribeToDeviceManager=/*#__PURE__*/function(){var _ref11=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee14(deviceManager,dispatch,getState){return _regeneratorRuntime.wrap(function _callee14$(_context14){while(1){switch(_context14.prev=_context14.next){case 0:// listen for any new events\ndeviceManager.on('permissionStateChanged',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee11(){var cameraPermissionState,microphonePermissionState;return _regeneratorRuntime.wrap(function _callee11$(_context11){while(1){switch(_context11.prev=_context11.next){case 0:_context11.next=2;return deviceManager.getPermissionState('Camera');case 2:cameraPermissionState=_context11.sent;dispatch(setCameraPermission(cameraPermissionState));_context11.next=6;return deviceManager.getPermissionState('Microphone');case 6:microphonePermissionState=_context11.sent;dispatch(setMicrophonePermission(microphonePermissionState));case 8:case\"end\":return _context11.stop();}}},_callee11);})));deviceManager.on('videoDevicesUpdated',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee12(){return _regeneratorRuntime.wrap(function _callee12$(_context12){while(1){switch(_context12.prev=_context12.next){case 0:updateVideoDevices(deviceManager,dispatch,getState);case 1:case\"end\":return _context12.stop();}}},_callee12);})));deviceManager.on('audioDevicesUpdated',/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee13(){return _regeneratorRuntime.wrap(function _callee13$(_context13){while(1){switch(_context13.prev=_context13.next){case 0:updateAudioDevices(deviceManager,dispatch,getState);case 1:case\"end\":return _context13.stop();}}},_callee13);})));deviceManager.askDevicePermission(true,true).then(function(e){if(e.audio!==undefined){if(e.audio){dispatch(setMicrophonePermission('Granted'));updateAudioDevices(deviceManager,dispatch,getState);}else{dispatch(setMicrophonePermission('Denied'));}}if(e.video!==undefined){if(e.video){dispatch(setCameraPermission('Granted'));updateVideoDevices(deviceManager,dispatch,getState);}else{dispatch(setCameraPermission('Denied'));}}});case 4:case\"end\":return _context14.stop();}}},_callee14);}));return function subscribeToDeviceManager(_x24,_x25,_x26){return _ref11.apply(this,arguments);};}();","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/core/sideEffects.ts"],"names":["CallClient","AzureCommunicationUserCredential","utils","callAdded","callRemoved","setCallState","setParticipants","setCallAgent","setMic","setShareScreen","resetControls","setAudioDeviceInfo","setAudioDeviceList","setCameraPermission","setMicrophonePermission","setVideoDeviceInfo","setVideoDeviceList","setDeviceManager","addScreenShareStream","resetStreams","removeScreenShareStream","setMicrophone","mic","dispatch","getState","state","undefined","calls","call","console","error","controls","unmute","mute","setShareUnshareScreen","shareScreen","startScreenSharing","stopScreenSharing","updateDevices","deviceManager","devices","getCameraList","cameraList","getMicrophoneList","microphoneList","initCallClient","userId","unsupportedStateHandler","endCallHandler","getTokenForUser","tokenResponse","options","userToken","value","token","isOnIphoneAndNotSafari","callClient","tokenCredential","createCallAgent","callAgent","updateDisplayName","getDeviceManager","subscribeToDeviceManager","on","e","added","forEach","addedCall","isIncoming","reject","isScreenSharingOn","ev","addedRemoteParticipant","log","subscribeToParticipant","remoteParticipants","values","removed","length","rp","v","removedCall","group","endCall","hangUp","catch","joinGroup","context","callOptions","join","addParticipant","user","removeParticipant","participant","getId","identifier","addedStream","type","isAvailable","updateAudioDevices","audioDeviceInfo","isSelectedAudioDeviceInList","updateVideoDevices","videoDeviceInfo","isSelectedVideoDeviceInList","getPermissionState","cameraPermissionState","microphonePermissionState","askDevicePermission","then","audio","video"],"mappings":"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","sourcesContent":["import {\r\n  AudioDeviceInfo,\r\n  Call,\r\n  CallClientOptions,\r\n  CommunicationError,\r\n  GroupCallContext,\r\n  JoinCallOptions,\r\n  DeviceManager,\r\n  DeviceAccess,\r\n  PermissionState,\r\n  RemoteParticipant,\r\n  VideoDeviceInfo,\r\n  CallAgent,\r\n  CallClient,\r\n  HangupCallOptions\r\n} from '@azure/communication-calling';\r\nimport { AzureCommunicationUserCredential, CommunicationUser, CallingApplication } from '@azure/communication-common';\r\nimport { Dispatch } from 'redux';\r\nimport { utils } from '../Utils/Utils';\r\nimport { callAdded, callRemoved, setCallState, setParticipants, setCallAgent } from './actions/calls';\r\nimport { setMic, setShareScreen, resetControls } from './actions/controls';\r\nimport {\r\n  setAudioDeviceInfo,\r\n  setAudioDeviceList,\r\n  setCameraPermission,\r\n  setMicrophonePermission,\r\n  setVideoDeviceInfo,\r\n  setVideoDeviceList,\r\n  setDeviceManager\r\n} from './actions/devices';\r\nimport { addScreenShareStream, resetStreams, removeScreenShareStream } from './actions/streams';\r\nimport { State } from './reducers';\r\n\r\nexport const setMicrophone = (mic: boolean) => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n\r\n    if (state === undefined || state.calls.call === undefined) {\r\n      console.error('state or state.controls.mic is null');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (!state.controls.mic) {\r\n        await state.calls.call.unmute();\r\n      } else {\r\n        await state.calls.call.mute();\r\n      }\r\n\r\n      dispatch(setMic(mic));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const setShareUnshareScreen = (shareScreen: boolean) => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    const state = getState();\r\n\r\n    if (state === undefined || state.calls.call === undefined) {\r\n      console.error('state or state.controls.shareScreen is null');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      if (!state.controls.shareScreen) {\r\n        await state.calls.call.startScreenSharing();\r\n      } else {\r\n        await state.calls.call.stopScreenSharing();\r\n      }\r\n\r\n      dispatch(setShareScreen(shareScreen));\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateDevices = () => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    let state = getState();\r\n    let deviceManager = state.devices.deviceManager;\r\n\r\n    if (deviceManager == null) {\r\n      console.error('no device manager available');\r\n      return;\r\n    }\r\n\r\n    const cameraList: VideoDeviceInfo[] = await deviceManager.getCameraList();\r\n\r\n    dispatch(setVideoDeviceList(cameraList));\r\n\r\n    const microphoneList: AudioDeviceInfo[] = await deviceManager.getMicrophoneList();\r\n\r\n    dispatch(setAudioDeviceList(microphoneList));\r\n  };\r\n};\r\n\r\nexport const initCallClient = (userId: string, unsupportedStateHandler: () => void, endCallHandler: () => void) => {\r\n  return async (dispatch: Dispatch, getState: () => State) => {\r\n    try {\r\n      const tokenResponse = await utils.getTokenForUser(userId);\r\n\r\n      const options: CallClientOptions = {};\r\n\r\n      const userToken = tokenResponse.value.token;\r\n\r\n      var callClient;\r\n\r\n      // check if chrome/ios\r\n      if (utils.isOnIphoneAndNotSafari()) {\r\n        unsupportedStateHandler();\r\n        return;\r\n      }\r\n\r\n      try {\r\n        callClient = new CallClient(options);\r\n      } catch (e) {\r\n        unsupportedStateHandler();\r\n        return;\r\n      }\r\n\r\n      if (!callClient) {\r\n        return;\r\n      }\r\n\r\n      const tokenCredential = new AzureCommunicationUserCredential(userToken);\r\n      let callAgent: CallAgent = await callClient.createCallAgent(tokenCredential);\r\n\r\n      if (callAgent === undefined) {\r\n        return;\r\n      }\r\n\r\n      callAgent.updateDisplayName(userId);\r\n\r\n      let deviceManager: DeviceManager = await callClient.getDeviceManager();\r\n\r\n      dispatch(setDeviceManager(deviceManager));\r\n      dispatch(setCallAgent(callAgent));\r\n\r\n      subscribeToDeviceManager(deviceManager, dispatch, getState);\r\n\r\n      callAgent.on('callsUpdated', (e: { added: Call[]; removed: Call[] }): void => {\r\n        e.added.forEach((addedCall) => {\r\n          const state = getState();\r\n          if (state.calls.call && addedCall.isIncoming) {\r\n            addedCall.reject();\r\n            return;\r\n          }\r\n\r\n          dispatch(callAdded(addedCall));\r\n\r\n          addedCall.on('callStateChanged', (): void => {\r\n            dispatch(setCallState(addedCall.state));\r\n          });\r\n\r\n          addedCall.on('isScreenSharingOnChanged', (): void => {\r\n            dispatch(setShareScreen(addedCall.isScreenSharingOn));\r\n          });\r\n\r\n          addedCall.on('remoteParticipantsUpdated', (ev): void => {\r\n            ev.added.forEach((addedRemoteParticipant) => {\r\n              console.log('participantAdded', addedRemoteParticipant);\r\n              subscribeToParticipant(addedRemoteParticipant, addedCall, dispatch, getState);\r\n              dispatch(setParticipants([...addedCall.remoteParticipants.values()]));\r\n            });\r\n\r\n            // we don't use the actual value we are just going to reset the remoteParticipants based on the call\r\n            if (ev.removed.length > 0) {\r\n              console.log('participantRemoved');\r\n              dispatch(setParticipants([...addedCall.remoteParticipants.values()]));\r\n            }\r\n          });\r\n\r\n          const rp = [...addedCall.remoteParticipants.values()];\r\n          rp.forEach((v) => subscribeToParticipant(v, addedCall, dispatch, getState));\r\n          dispatch(setParticipants(rp));\r\n          dispatch(setCallState(addedCall.state));\r\n        });\r\n        e.removed.forEach((removedCall) => {\r\n          console.log('callRemoved', removedCall);\r\n          const state = getState();\r\n          if (state.calls.call && state.calls.call === removedCall) {\r\n            dispatch(callRemoved(removedCall, state.calls.group));\r\n            dispatch(resetControls());\r\n            dispatch(resetStreams());\r\n          }\r\n        });\r\n      });\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  };\r\n};\r\n\r\n// what does the forEveryone parameter really mean?\r\nexport const endCall = async (call: Call, options: HangupCallOptions) => {\r\n  call.hangUp(options).catch((e: CommunicationError) => console.error(e));\r\n};\r\n\r\nexport const joinGroup = async (callAgent: CallAgent, context: GroupCallContext, callOptions: JoinCallOptions) => {\r\n  try {\r\n    await callAgent.join(context, callOptions);\r\n  } catch (e) {\r\n    console.log('Failed to join a call', e);\r\n    return;\r\n  }\r\n};\r\n\r\nexport const addParticipant = async (call: Call, user: CommunicationUser | CallingApplication) => {\r\n  call.addParticipant(user);\r\n};\r\n\r\nexport const removeParticipant = async (call: Call, user: CommunicationUser | CallingApplication) => {\r\n  call.removeParticipant(user).catch((e: CommunicationError) => console.error(e));\r\n};\r\n\r\nconst subscribeToParticipant = (\r\n  participant: RemoteParticipant,\r\n  call: Call,\r\n  dispatch: Dispatch,\r\n  getState: () => State\r\n) => {\r\n  const userId = utils.getId(participant.identifier);\r\n  participant.on('participantStateChanged', () => {\r\n    console.log('participant stateChanged', userId, participant.state);\r\n    dispatch(setParticipants([...call.remoteParticipants.values()]));\r\n  });\r\n\r\n  participant.on('isSpeakingChanged', () => {\r\n    dispatch(setParticipants([...call.remoteParticipants.values()]));\r\n  });\r\n\r\n  participant.on('videoStreamsUpdated', (e): void => {\r\n    e.added.forEach((addedStream) => {\r\n      if (addedStream.type === 'Video') {\r\n        return;\r\n      }\r\n      addedStream.on('availabilityChanged', () => {\r\n        if (addedStream.isAvailable) {\r\n          dispatch(addScreenShareStream(addedStream, participant));\r\n        } else {\r\n          dispatch(removeScreenShareStream(addedStream, participant));\r\n        }\r\n      });\r\n\r\n      if (addedStream.isAvailable) {\r\n        dispatch(addScreenShareStream(addedStream, participant));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst updateAudioDevices = async (deviceManager: DeviceManager, dispatch: Dispatch, getState: () => State) => {\r\n  const microphoneList: AudioDeviceInfo[] = await deviceManager.getMicrophoneList();\r\n  dispatch(setAudioDeviceList(microphoneList));\r\n\r\n  const state = getState();\r\n  if (state.devices.audioDeviceInfo === undefined && microphoneList.length > 0) {\r\n    dispatch(setAudioDeviceInfo(microphoneList[0]));\r\n    deviceManager.setMicrophone(microphoneList[0]);\r\n  } else if (\r\n    state.devices.audioDeviceInfo &&\r\n    !utils.isSelectedAudioDeviceInList(state.devices.audioDeviceInfo, microphoneList)\r\n  ) {\r\n    deviceManager.setMicrophone(state.devices.audioDeviceInfo);\r\n  }\r\n};\r\n\r\nconst updateVideoDevices = async (deviceManager: DeviceManager, dispatch: Dispatch, getState: () => State) => {\r\n  const cameraList: VideoDeviceInfo[] = deviceManager.getCameraList();\r\n  dispatch(setVideoDeviceList(cameraList));\r\n\r\n  const state = getState();\r\n  if (state.devices.videoDeviceInfo === undefined) {\r\n    dispatch(setVideoDeviceInfo(cameraList[0]));\r\n  } else if (\r\n    state.devices.videoDeviceInfo &&\r\n    !utils.isSelectedVideoDeviceInList(state.devices.videoDeviceInfo, cameraList)\r\n  ) {\r\n    dispatch(setVideoDeviceInfo(state.devices.videoDeviceInfo));\r\n  }\r\n};\r\n\r\nconst subscribeToDeviceManager = async (deviceManager: DeviceManager, dispatch: Dispatch, getState: () => State) => {\r\n  // listen for any new events\r\n  deviceManager.on('permissionStateChanged', async () => {\r\n    const cameraPermissionState: PermissionState = await deviceManager.getPermissionState('Camera');\r\n    dispatch(setCameraPermission(cameraPermissionState));\r\n\r\n    const microphonePermissionState: PermissionState = await deviceManager.getPermissionState('Microphone');\r\n    dispatch(setMicrophonePermission(microphonePermissionState));\r\n  });\r\n\r\n  deviceManager.on('videoDevicesUpdated', async () => {\r\n    updateVideoDevices(deviceManager, dispatch, getState);\r\n  });\r\n\r\n  deviceManager.on('audioDevicesUpdated', async () => {\r\n    updateAudioDevices(deviceManager, dispatch, getState);\r\n  });\r\n\r\n  deviceManager.askDevicePermission(true, true).then((e: DeviceAccess) => {\r\n    if (e.audio !== undefined) {\r\n      if (e.audio) {\r\n        dispatch(setMicrophonePermission('Granted'));\r\n\r\n        updateAudioDevices(deviceManager, dispatch, getState);\r\n      } else {\r\n        dispatch(setMicrophonePermission('Denied'));\r\n      }\r\n    }\r\n\r\n    if (e.video !== undefined) {\r\n      if (e.video) {\r\n        dispatch(setCameraPermission('Granted'));\r\n        updateVideoDevices(deviceManager, dispatch, getState);\r\n      } else {\r\n        dispatch(setCameraPermission('Denied'));\r\n      }\r\n    }\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}