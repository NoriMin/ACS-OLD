{"ast":null,"code":"// © Microsoft Corporation. All rights reserved.\nimport React from'react';import{Stack,Dropdown}from'@fluentui/react';import{localSettingsContainer,dropDownStyles,micStackTokens,mainStackTokens}from'./styles/LocalSettings.styles';export default(function(props){var defaultPlaceHolder='Select an option';var cameraLabel='Camera';var micLabel='Microphone';var getDropDownList=function getDropDownList(list){return list.map(function(item){return{val:item,key:item.id,text:item.name===''?item.deviceType:item.name};});};return/*#__PURE__*/React.createElement(Stack,{className:localSettingsContainer,tokens:mainStackTokens},/*#__PURE__*/React.createElement(Dropdown,{placeholder:defaultPlaceHolder,label:cameraLabel,options:getDropDownList(props.videoDeviceList),styles:dropDownStyles,disabled:props.videoDeviceList.length===0,defaultSelectedKey:props.videoDeviceInfo?props.videoDeviceInfo.id:'',onChange:function onChange(){var _ref;var index=(_ref=arguments.length<=2?undefined:arguments[2])!==null&&_ref!==void 0?_ref:0;props.setVideoDeviceInfo(props.videoDeviceList[index]);}}),/*#__PURE__*/React.createElement(Stack,{tokens:micStackTokens},/*#__PURE__*/React.createElement(Dropdown,{placeholder:defaultPlaceHolder,label:micLabel,styles:dropDownStyles,disabled:props.audioDeviceList.length===0,options:getDropDownList(props.audioDeviceList),defaultSelectedKey:props.audioDeviceInfo?props.audioDeviceInfo.id:'',onChange:function onChange(){var _ref2;var index=(_ref2=arguments.length<=2?undefined:arguments[2])!==null&&_ref2!==void 0?_ref2:0;props.setAudioDeviceInfo(props.audioDeviceList[index]);}})));});","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/components/LocalSettings.tsx"],"names":["React","Stack","Dropdown","localSettingsContainer","dropDownStyles","micStackTokens","mainStackTokens","props","defaultPlaceHolder","cameraLabel","micLabel","getDropDownList","list","map","item","val","key","id","text","name","deviceType","videoDeviceList","length","videoDeviceInfo","index","setVideoDeviceInfo","audioDeviceList","audioDeviceInfo","setAudioDeviceInfo"],"mappings":"AAAA;AACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAiD,iBAAjD,CAEA,OAASC,sBAAT,CAAiCC,cAAjC,CAAiDC,cAAjD,CAAiEC,eAAjE,KAAwF,+BAAxF,CAWA,eAAe,SAACC,KAAD,CAA4C,CACzD,GAAMC,CAAAA,kBAAkB,CAAG,kBAA3B,CACA,GAAMC,CAAAA,WAAW,CAAG,QAApB,CACA,GAAMC,CAAAA,QAAQ,CAAG,YAAjB,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,IAAD,CAAuE,CAC7F,MAAOA,CAAAA,IAAI,CAACC,GAAL,CAAS,SAACC,IAAD,QAAW,CACzBC,GAAG,CAAED,IADoB,CAEzBE,GAAG,CAAEF,IAAI,CAACG,EAFe,CAGzBC,IAAI,CAAEJ,IAAI,CAACK,IAAL,GAAc,EAAd,CAAmBL,IAAI,CAACM,UAAxB,CAAqCN,IAAI,CAACK,IAHvB,CAAX,EAAT,CAAP,CAKD,CAND,CAOA,mBACE,oBAAC,KAAD,EAAO,SAAS,CAAEhB,sBAAlB,CAA0C,MAAM,CAAEG,eAAlD,eACE,oBAAC,QAAD,EACE,WAAW,CAAEE,kBADf,CAEE,KAAK,CAAEC,WAFT,CAGE,OAAO,CAAEE,eAAe,CAACJ,KAAK,CAACc,eAAP,CAH1B,CAIE,MAAM,CAAEjB,cAJV,CAKE,QAAQ,CAAEG,KAAK,CAACc,eAAN,CAAsBC,MAAtB,GAAiC,CAL7C,CAME,kBAAkB,CAAEf,KAAK,CAACgB,eAAN,CAAwBhB,KAAK,CAACgB,eAAN,CAAsBN,EAA9C,CAAmD,EANzE,CAOE,QAAQ,CAAE,mBAAa,UACrB,GAAMO,CAAAA,KAAK,8EAAc,CAAzB,CACAjB,KAAK,CAACkB,kBAAN,CAAyBlB,KAAK,CAACc,eAAN,CAAsBG,KAAtB,CAAzB,EACD,CAVH,EADF,cAaE,oBAAC,KAAD,EAAO,MAAM,CAAEnB,cAAf,eACE,oBAAC,QAAD,EACE,WAAW,CAAEG,kBADf,CAEE,KAAK,CAAEE,QAFT,CAGE,MAAM,CAAEN,cAHV,CAIE,QAAQ,CAAEG,KAAK,CAACmB,eAAN,CAAsBJ,MAAtB,GAAiC,CAJ7C,CAKE,OAAO,CAAEX,eAAe,CAACJ,KAAK,CAACmB,eAAP,CAL1B,CAME,kBAAkB,CAAEnB,KAAK,CAACoB,eAAN,CAAwBpB,KAAK,CAACoB,eAAN,CAAsBV,EAA9C,CAAmD,EANzE,CAOE,QAAQ,CAAE,mBAAa,WACrB,GAAMO,CAAAA,KAAK,iFAAc,CAAzB,CACAjB,KAAK,CAACqB,kBAAN,CAAyBrB,KAAK,CAACmB,eAAN,CAAsBF,KAAtB,CAAzB,EACD,CAVH,EADF,CAbF,CADF,CA8BD,CA1CD","sourcesContent":["// © Microsoft Corporation. All rights reserved.\r\nimport React from 'react';\r\nimport { Stack, Dropdown, IDropdownOption } from '@fluentui/react';\r\nimport { VideoDeviceInfo, AudioDeviceInfo } from '@azure/communication-calling';\r\nimport { localSettingsContainer, dropDownStyles, micStackTokens, mainStackTokens } from './styles/LocalSettings.styles';\r\n\r\nexport interface LocalSettingsProps {\r\n  videoDeviceList: VideoDeviceInfo[];\r\n  audioDeviceList: AudioDeviceInfo[];\r\n  videoDeviceInfo: VideoDeviceInfo;\r\n  audioDeviceInfo: AudioDeviceInfo;\r\n  setVideoDeviceInfo(device: VideoDeviceInfo): void;\r\n  setAudioDeviceInfo(device: AudioDeviceInfo): void;\r\n}\r\n\r\nexport default (props: LocalSettingsProps): JSX.Element => {\r\n  const defaultPlaceHolder = 'Select an option';\r\n  const cameraLabel = 'Camera';\r\n  const micLabel = 'Microphone';\r\n\r\n  const getDropDownList = (list: Array<VideoDeviceInfo | AudioDeviceInfo>): IDropdownOption[] => {\r\n    return list.map((item) => ({\r\n      val: item,\r\n      key: item.id,\r\n      text: item.name === '' ? item.deviceType : item.name\r\n    }));\r\n  };\r\n  return (\r\n    <Stack className={localSettingsContainer} tokens={mainStackTokens}>\r\n      <Dropdown\r\n        placeholder={defaultPlaceHolder}\r\n        label={cameraLabel}\r\n        options={getDropDownList(props.videoDeviceList)}\r\n        styles={dropDownStyles}\r\n        disabled={props.videoDeviceList.length === 0}\r\n        defaultSelectedKey={props.videoDeviceInfo ? props.videoDeviceInfo.id : ''}\r\n        onChange={(...args) => {\r\n          const index = args[2] ?? 0;\r\n          props.setVideoDeviceInfo(props.videoDeviceList[index]);\r\n        }}\r\n      />\r\n      <Stack tokens={micStackTokens}>\r\n        <Dropdown\r\n          placeholder={defaultPlaceHolder}\r\n          label={micLabel}\r\n          styles={dropDownStyles}\r\n          disabled={props.audioDeviceList.length === 0}\r\n          options={getDropDownList(props.audioDeviceList)}\r\n          defaultSelectedKey={props.audioDeviceInfo ? props.audioDeviceInfo.id : ''}\r\n          onChange={(...args) => {\r\n            const index = args[2] ?? 0;\r\n            props.setAudioDeviceInfo(props.audioDeviceList[index]);\r\n          }}\r\n        />\r\n      </Stack>\r\n    </Stack>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}