{"ast":null,"code":"import{connect}from'react-redux';import{removeParticipant as _removeParticipant}from'../core/sideEffects';import ParticipantStack from'../components/ParticipantStack';var mapStateToProps=function mapStateToProps(state){return{userId:state.sdk.userId,call:state.calls.call,callState:state.calls.callState,remoteParticipants:state.calls.remoteParticipants,screenShareStreams:state.streams.screenShareStreams,removeParticipant:function removeParticipant(user){if(state.calls.call&&user){_removeParticipant(state.calls.call,user);}}};};var connector=connect(mapStateToProps);export default connector(ParticipantStack);","map":{"version":3,"sources":["C:/Users/t-tamina/source/repos/Communication/samples/Group Calling Hero Sample/Web/Calling/ClientApp/src/containers/ParticipantStack.ts"],"names":["connect","removeParticipant","ParticipantStack","mapStateToProps","state","userId","sdk","call","calls","callState","remoteParticipants","screenShareStreams","streams","user","connector"],"mappings":"AAAA,OAASA,OAAT,KAAwB,aAAxB,CACA,OAASC,iBAAiB,GAAjBA,CAAAA,kBAAT,KAAkC,qBAAlC,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,gCAA7B,CAGA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,QAAmB,CACzCC,MAAM,CAAED,KAAK,CAACE,GAAN,CAAUD,MADuB,CAEzCE,IAAI,CAAEH,KAAK,CAACI,KAAN,CAAYD,IAFuB,CAGzCE,SAAS,CAAEL,KAAK,CAACI,KAAN,CAAYC,SAHkB,CAIzCC,kBAAkB,CAAEN,KAAK,CAACI,KAAN,CAAYE,kBAJS,CAKzCC,kBAAkB,CAAEP,KAAK,CAACQ,OAAN,CAAcD,kBALO,CAMzCV,iBAAiB,CAAE,2BAACY,IAAD,CAA8D,CAC/E,GAAIT,KAAK,CAACI,KAAN,CAAYD,IAAZ,EAAoBM,IAAxB,CAA8B,CAC5BZ,kBAAiB,CAACG,KAAK,CAACI,KAAN,CAAYD,IAAb,CAAmBM,IAAnB,CAAjB,CACD,CACF,CAVwC,CAAnB,EAAxB,CAaA,GAAMC,CAAAA,SAAc,CAAGd,OAAO,CAACG,eAAD,CAA9B,CACA,cAAeW,CAAAA,SAAS,CAACZ,gBAAD,CAAxB","sourcesContent":["import { connect } from 'react-redux';\r\nimport { removeParticipant } from '../core/sideEffects';\r\nimport { State } from '../core/reducers';\r\nimport ParticipantStack from '../components/ParticipantStack';\r\nimport { CommunicationUser, CallingApplication } from '@azure/communication-common';\r\n\r\nconst mapStateToProps = (state: State) => ({\r\n  userId: state.sdk.userId,\r\n  call: state.calls.call,\r\n  callState: state.calls.callState,\r\n  remoteParticipants: state.calls.remoteParticipants,\r\n  screenShareStreams: state.streams.screenShareStreams,\r\n  removeParticipant: (user: CommunicationUser | CallingApplication | undefined) => {\r\n    if (state.calls.call && user) {\r\n      removeParticipant(state.calls.call, user);\r\n    }\r\n  }\r\n});\r\n\r\nconst connector: any = connect(mapStateToProps);\r\nexport default connector(ParticipantStack);\r\n"]},"metadata":{},"sourceType":"module"}